Package portugol;

Helpers
  underscore = '_' ;    
  ascii_char = [32 .. 127] ;
  all = [0 .. 0xffff];

  // letters and digits
  letra = [['a' .. 'z'] + ['A' .. 'Z']];
  digito = ['0' .. '9'] ;

  // un-printable characters
  tab = 9 ;
  cr = 13 ;
  lf = 10 ;
  blank = ' ' ;
  eol = cr lf | cr | lf;

States
  normal,
  comment;

Tokens
  //palavras reservadas
{normal} fim = 'fim.' ;
{normal} var = 'var' ;
{normal} inicio = 'inicio' ;
{normal} programa = 'programa' ;
{normal} escreva = 'escreva' ;

  //tipos
{normal} inteiro = 'inteiro' ;
{normal} real = 'real' ;
{normal} caractere = 'caractere' ; 
 
  //condicoes
{normal} se = 'se' ;
{normal} fim_se = 'fim se' ;
{normal} entao = 'entao' ;
{normal} senao = 'senao' ;
{normal} avalie = 'avalie' ;
{normal} fim_avalie = 'fim avalie' ;

  //loop
{normal} enquanto = 'enquanto' ;
{normal} faca = 'faca';
{normal} fim_enquanto = 'fim enquanto' ;
{normal} repita = 'repita' ;
{normal} ate = 'ate' ;
{normal} para = 'para' ;
{normal} fim_para = 'fim para' ;

  // simbolos aritmeticos
{normal} mais = '+' ;
{normal} menos = '-' ;
{normal} mult = '*' ;
{normal} atribuicao = ':=' ;

    
  // simbolos separadores
{normal} comma = ',' ;
{normal} colon = ':' ;
{normal} semicolon = ';' ;
{normal} l_paren = '(' ;
{normal} r_paren = ')' ;
{normal} aspa_d = '"' ;
{normal} aspa_s = ''';
{normal} l_colchete = '[' ;
{normal} r_colchete = ']' ;
{normal} l_chave = '{' ;
{normal} r_chave = '}' ;

  //boolean symbols    
{normal} igual = '=' ;
{normal} maior ='>' ;
{normal} menor = '<';
{normal} maioriagual = '>=';
{normal} menorigual = '<=';
{normal} diferente = '<>';

  /****************************************************************
   *  verifica as possibilidades de underscore concatenados com letras digitos e  underscore  *
   *      com as possibilidades de letras concatenados com letras digitos underscore*	
   ****************************************************************/
  // identificador
{normal} identificador = underscore(letra | digito | underscore)* | letra (letra | digito | underscore)* ;
  
  // blanks 
{normal} blanks = blank | cr lf | cr | lf | tab ;
 
  // numeros
{normal} numero = digito+ ; 

  // comentario aninhado
{normal->comment, comment}
          comment = '/*';


{comment} comment_end = '*/';
{comment} comment_body = [all -['*' + '/']]*;
{comment} star = '*';
{comment} slash = '/';

  //comentario simples
{normal} comentario_simples= '//'( [all -[cr + lf]]*) eol;

Ignored Tokens
  comentario_simples,
  comment, 
  blanks ;
  
