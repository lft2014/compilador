/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.parser;

import portugol.lexer.*;
import portugol.node.*;
import portugol.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce APrograma */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce ADeclaracoes */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce AVazioDeclaracoes */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list, false);
            }
            break;
            case 3: /* reduce AMultiplasDeclaracaoConj */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list, false);
            }
            break;
            case 4: /* reduce ASimplesDeclaracaoConj */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list, false);
            }
            break;
            case 5: /* reduce AConstDeclaracaoConj */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list, false);
            }
            break;
            case 6: /* reduce AMultiplasDeclaracaoVarLista */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list, false);
            }
            break;
            case 7: /* reduce ASimplesDeclaracaoVarLista */
            {
                ArrayList<Object> list = new7();
                push(goTo(3), list, false);
            }
            break;
            case 8: /* reduce AVarDef */
            {
                ArrayList<Object> list = new8();
                push(goTo(4), list, false);
            }
            break;
            case 9: /* reduce AVetorVarDef */
            {
                ArrayList<Object> list = new9();
                push(goTo(4), list, false);
            }
            break;
            case 10: /* reduce AIntTipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(5), list, false);
            }
            break;
            case 11: /* reduce ATipo */
            {
                ArrayList<Object> list = new11();
                push(goTo(5), list, false);
            }
            break;
            case 12: /* reduce ACTipo */
            {
                ArrayList<Object> list = new12();
                push(goTo(5), list, false);
            }
            break;
            case 13: /* reduce AIntValor */
            {
                ArrayList<Object> list = new13();
                push(goTo(6), list, false);
            }
            break;
            case 14: /* reduce AValor */
            {
                ArrayList<Object> list = new14();
                push(goTo(6), list, false);
            }
            break;
            case 15: /* reduce AStrValor */
            {
                ArrayList<Object> list = new15();
                push(goTo(6), list, false);
            }
            break;
            case 16: /* reduce AExpressoesExp */
            {
                ArrayList<Object> list = new16();
                push(goTo(7), list, false);
            }
            break;
            case 17: /* reduce AExp */
            {
                ArrayList<Object> list = new17();
                push(goTo(7), list, false);
            }
            break;
            case 18: /* reduce AMExp */
            {
                ArrayList<Object> list = new18();
                push(goTo(7), list, false);
            }
            break;
            case 19: /* reduce ANaologicaExp */
            {
                ArrayList<Object> list = new19();
                push(goTo(7), list, false);
            }
            break;
            case 20: /* reduce ANExpnLogica */
            {
                ArrayList<Object> list = new20();
                push(goTo(8), list, false);
            }
            break;
            case 21: /* reduce AIgualExpLogica */
            {
                ArrayList<Object> list = new21();
                push(goTo(9), list, false);
            }
            break;
            case 22: /* reduce AMaiorExpLogica */
            {
                ArrayList<Object> list = new22();
                push(goTo(9), list, false);
            }
            break;
            case 23: /* reduce AMenorExpLogica */
            {
                ArrayList<Object> list = new23();
                push(goTo(9), list, false);
            }
            break;
            case 24: /* reduce AMaiorouigualExpLogica */
            {
                ArrayList<Object> list = new24();
                push(goTo(9), list, false);
            }
            break;
            case 25: /* reduce AMenorouigualExpLogica */
            {
                ArrayList<Object> list = new25();
                push(goTo(9), list, false);
            }
            break;
            case 26: /* reduce ADiferenteExpLogica */
            {
                ArrayList<Object> list = new26();
                push(goTo(9), list, false);
            }
            break;
            case 27: /* reduce AUniaoExpLogica */
            {
                ArrayList<Object> list = new27();
                push(goTo(9), list, false);
            }
            break;
            case 28: /* reduce AOExpLogica */
            {
                ArrayList<Object> list = new28();
                push(goTo(9), list, false);
            }
            break;
            case 29: /* reduce AXorrExpLogica */
            {
                ArrayList<Object> list = new29();
                push(goTo(9), list, false);
            }
            break;
            case 30: /* reduce AMaisSomaMenos */
            {
                ArrayList<Object> list = new30();
                push(goTo(10), list, false);
            }
            break;
            case 31: /* reduce AMenosSomaMenos */
            {
                ArrayList<Object> list = new31();
                push(goTo(10), list, false);
            }
            break;
            case 32: /* reduce ASomaMenos */
            {
                ArrayList<Object> list = new32();
                push(goTo(10), list, false);
            }
            break;
            case 33: /* reduce AMultiplicacaoTermo */
            {
                ArrayList<Object> list = new33();
                push(goTo(11), list, false);
            }
            break;
            case 34: /* reduce ATermo */
            {
                ArrayList<Object> list = new34();
                push(goTo(11), list, false);
            }
            break;
            case 35: /* reduce ANumerointFator */
            {
                ArrayList<Object> list = new35();
                push(goTo(12), list, false);
            }
            break;
            case 36: /* reduce AIdFator */
            {
                ArrayList<Object> list = new36();
                push(goTo(12), list, false);
            }
            break;
            case 37: /* reduce AExpFator */
            {
                ArrayList<Object> list = new37();
                push(goTo(12), list, false);
            }
            break;
            case 38: /* reduce AStrFator */
            {
                ArrayList<Object> list = new38();
                push(goTo(12), list, false);
            }
            break;
            case 39: /* reduce ALeiaConjComandos */
            {
                ArrayList<Object> list = new39();
                push(goTo(13), list, false);
            }
            break;
            case 40: /* reduce AEscrevaConjComandos */
            {
                ArrayList<Object> list = new40();
                push(goTo(13), list, false);
            }
            break;
            case 41: /* reduce AAtribuiConjComandos */
            {
                ArrayList<Object> list = new41();
                push(goTo(13), list, false);
            }
            break;
            case 42: /* reduce ACondicionalConjComandos */
            {
                ArrayList<Object> list = new42();
                push(goTo(13), list, false);
            }
            break;
            case 43: /* reduce AEnquantoConjComandos */
            {
                ArrayList<Object> list = new43();
                push(goTo(13), list, false);
            }
            break;
            case 44: /* reduce ARepitaConjComandos */
            {
                ArrayList<Object> list = new44();
                push(goTo(13), list, false);
            }
            break;
            case 45: /* reduce AFacaConjComandos */
            {
                ArrayList<Object> list = new45();
                push(goTo(13), list, false);
            }
            break;
            case 46: /* reduce AFacaPassoConjComandos */
            {
                ArrayList<Object> list = new46();
                push(goTo(13), list, false);
            }
            break;
            case 47: /* reduce AConjComandos */
            {
                ArrayList<Object> list = new47();
                push(goTo(13), list, false);
            }
            break;
            case 48: /* reduce AVazioConjComandos */
            {
                ArrayList<Object> list = new48();
                push(goTo(13), list, false);
            }
            break;
            case 49: /* reduce AComandoLeia */
            {
                ArrayList<Object> list = new49();
                push(goTo(14), list, false);
            }
            break;
            case 50: /* reduce AComandoEscreva */
            {
                ArrayList<Object> list = new50();
                push(goTo(15), list, false);
            }
            break;
            case 51: /* reduce AComandoAtribuicao */
            {
                ArrayList<Object> list = new51();
                push(goTo(16), list, false);
            }
            break;
            case 52: /* reduce ASimplesComandoSe */
            {
                ArrayList<Object> list = new52();
                push(goTo(17), list, false);
            }
            break;
            case 53: /* reduce ACompletoComandoSe */
            {
                ArrayList<Object> list = new53();
                push(goTo(17), list, false);
            }
            break;
            case 54: /* reduce ADSenao */
            {
                ArrayList<Object> list = new54();
                push(goTo(18), list, false);
            }
            break;
            case 55: /* reduce AEnquantoComandoEnquanto */
            {
                ArrayList<Object> list = new55();
                push(goTo(19), list, false);
            }
            break;
            case 56: /* reduce ARepitaComandoRepita */
            {
                ArrayList<Object> list = new56();
                push(goTo(20), list, false);
            }
            break;
            case 57: /* reduce AParaComandoPara */
            {
                ArrayList<Object> list = new57();
                push(goTo(21), list, false);
            }
            break;
            case 58: /* reduce AComplementoPara */
            {
                ArrayList<Object> list = new58();
                push(goTo(22), list, false);
            }
            break;
            case 59: /* reduce AComandoParaPasso */
            {
                ArrayList<Object> list = new59();
                push(goTo(23), list, false);
            }
            break;
            case 60: /* reduce AComplementoPara2 */
            {
                ArrayList<Object> list = new60();
                push(goTo(24), list, false);
            }
            break;
            case 61: /* reduce AAvalieComandoAvalie */
            {
                ArrayList<Object> list = new61();
                push(goTo(25), list, false);
            }
            break;
            case 62: /* reduce AComandoCaso */
            {
                ArrayList<Object> list = new62();
                push(goTo(26), list, false);
            }
            break;
            case 63: /* reduce ASenaoAvalie */
            {
                ArrayList<Object> list = new63();
                push(goTo(27), list, false);
            }
            break;
            case 64: /* reduce AVazioSenaoAvalie */
            {
                ArrayList<Object> list = new64();
                push(goTo(27), list, false);
            }
            break;
            case 65: /* reduce ATerminal$ComandoCaso */
            {
                ArrayList<Object> list = new65();
                push(goTo(28), list, true);
            }
            break;
            case 66: /* reduce ANonTerminal$ComandoCaso */
            {
                ArrayList<Object> list = new66();
                push(goTo(28), list, true);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce APrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TPontoevirgula tpontoevirgulaNode4;
        TInicio tinicioNode5;
        PDeclaracoes pdeclaracoesNode6;
        PConjComandos pconjcomandosNode7;
        TFim tfimNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tpontoevirgulaNode4 = (TPontoevirgula)nodeArrayList3.get(0);
        tinicioNode5 = (TInicio)nodeArrayList4.get(0);
        pdeclaracoesNode6 = (PDeclaracoes)nodeArrayList5.get(0);
        pconjcomandosNode7 = (PConjComandos)nodeArrayList6.get(0);
        tfimNode8 = (TFim)nodeArrayList7.get(0);

        pprogramaNode1 = new APrograma(tprogramaNode2, tidentificadorNode3, tpontoevirgulaNode4, tinicioNode5, pdeclaracoesNode6, pconjcomandosNode7, tfimNode8);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce ADeclaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoes pdeclaracoesNode1;
        {
            // Block
        PDeclaracoes pdeclaracoesNode2;
        PDeclaracaoConj pdeclaracaoconjNode3;
        pdeclaracoesNode2 = (PDeclaracoes)nodeArrayList1.get(0);
        pdeclaracaoconjNode3 = (PDeclaracaoConj)nodeArrayList2.get(0);

        pdeclaracoesNode1 = new ADeclaracoes(pdeclaracoesNode2, pdeclaracaoconjNode3);
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AVazioDeclaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PDeclaracoes pdeclaracoesNode1;
        {
            // Block

        pdeclaracoesNode1 = new AVazioDeclaracoes();
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AMultiplasDeclaracaoConj */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoConj pdeclaracaoconjNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoispontos tdoispontosNode3;
        PDeclaracaoVarLista pdeclaracaovarlistaNode4;
        PVarDef pvardefNode5;
        TPontoevirgula tpontoevirgulaNode6;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pdeclaracaovarlistaNode4 = (PDeclaracaoVarLista)nodeArrayList3.get(0);
        pvardefNode5 = (PVarDef)nodeArrayList4.get(0);
        tpontoevirgulaNode6 = (TPontoevirgula)nodeArrayList5.get(0);

        pdeclaracaoconjNode1 = new AMultiplasDeclaracaoConj(ptipoNode2, tdoispontosNode3, pdeclaracaovarlistaNode4, pvardefNode5, tpontoevirgulaNode6);
        }
	nodeList.add(pdeclaracaoconjNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ASimplesDeclaracaoConj */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoConj pdeclaracaoconjNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoispontos tdoispontosNode3;
        PVarDef pvardefNode4;
        TPontoevirgula tpontoevirgulaNode5;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pvardefNode4 = (PVarDef)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoevirgula)nodeArrayList4.get(0);

        pdeclaracaoconjNode1 = new ASimplesDeclaracaoConj(ptipoNode2, tdoispontosNode3, pvardefNode4, tpontoevirgulaNode5);
        }
	nodeList.add(pdeclaracaoconjNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AConstDeclaracaoConj */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoConj pdeclaracaoconjNode1;
        {
            // Block
        TConst tconstNode2;
        TIdentificador tidentificadorNode3;
        PValor pvalorNode4;
        TPontoevirgula tpontoevirgulaNode5;
        tconstNode2 = (TConst)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoevirgula)nodeArrayList4.get(0);

        pdeclaracaoconjNode1 = new AConstDeclaracaoConj(tconstNode2, tidentificadorNode3, pvalorNode4, tpontoevirgulaNode5);
        }
	nodeList.add(pdeclaracaoconjNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AMultiplasDeclaracaoVarLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVarLista pdeclaracaovarlistaNode1;
        {
            // Block
        PDeclaracaoVarLista pdeclaracaovarlistaNode2;
        PVarDef pvardefNode3;
        TVirgula tvirgulaNode4;
        pdeclaracaovarlistaNode2 = (PDeclaracaoVarLista)nodeArrayList1.get(0);
        pvardefNode3 = (PVarDef)nodeArrayList2.get(0);
        tvirgulaNode4 = (TVirgula)nodeArrayList3.get(0);

        pdeclaracaovarlistaNode1 = new AMultiplasDeclaracaoVarLista(pdeclaracaovarlistaNode2, pvardefNode3, tvirgulaNode4);
        }
	nodeList.add(pdeclaracaovarlistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ASimplesDeclaracaoVarLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVarLista pdeclaracaovarlistaNode1;
        {
            // Block
        PVarDef pvardefNode2;
        TVirgula tvirgulaNode3;
        pvardefNode2 = (PVarDef)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pdeclaracaovarlistaNode1 = new ASimplesDeclaracaoVarLista(pvardefNode2, tvirgulaNode3);
        }
	nodeList.add(pdeclaracaovarlistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AVarDef */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarDef pvardefNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvardefNode1 = new AVarDef(tidentificadorNode2);
        }
	nodeList.add(pvardefNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AVetorVarDef */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarDef pvardefNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TEsqColchete tesqcolcheteNode3;
        TNInt tnintNode4;
        TDirColchete tdircolcheteNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tesqcolcheteNode3 = (TEsqColchete)nodeArrayList2.get(0);
        tnintNode4 = (TNInt)nodeArrayList3.get(0);
        tdircolcheteNode5 = (TDirColchete)nodeArrayList4.get(0);

        pvardefNode1 = new AVetorVarDef(tidentificadorNode2, tesqcolcheteNode3, tnintNode4, tdircolcheteNode5);
        }
	nodeList.add(pvardefNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AIntTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AIntTipo(tinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ATipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoNode1 = new ATipo(trealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ACTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ACTipo(tcaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AIntValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNInt tnintNode2;
        tnintNode2 = (TNInt)nodeArrayList1.get(0);

        pvalorNode1 = new AIntValor(tnintNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNReal tnrealNode2;
        tnrealNode2 = (TNReal)nodeArrayList1.get(0);

        pvalorNode1 = new AValor(tnrealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AStrValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStrValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AExpressoesExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PSomaMenos psomamenosNode2;
        psomamenosNode2 = (PSomaMenos)nodeArrayList1.get(0);

        pexpNode1 = new AExpressoesExp(psomamenosNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);

        pexpNode1 = new AExp(pexplogicaNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AMExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        TMenos tmenosNode2;
        PSomaMenos psomamenosNode3;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);
        psomamenosNode3 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode1 = new AMExp(tmenosNode2, psomamenosNode3);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce ANaologicaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExpnLogica pexpnlogicaNode2;
        pexpnlogicaNode2 = (PExpnLogica)nodeArrayList1.get(0);

        pexpNode1 = new ANaologicaExp(pexpnlogicaNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ANExpnLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpnLogica pexpnlogicaNode1;
        {
            // Block
        TNao tnaoNode2;
        PSomaMenos psomamenosNode3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        psomamenosNode3 = (PSomaMenos)nodeArrayList2.get(0);

        pexpnlogicaNode1 = new ANExpnLogica(tnaoNode2, psomamenosNode3);
        }
	nodeList.add(pexpnlogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AIgualExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TIgual tigualNode3;
        PSomaMenos psomamenosNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tigualNode3 = (TIgual)nodeArrayList2.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AIgualExpLogica(pexpNode2, tigualNode3, psomamenosNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AMaiorExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMaior tmaiorNode3;
        PSomaMenos psomamenosNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmaiorNode3 = (TMaior)nodeArrayList2.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMaiorExpLogica(pexpNode2, tmaiorNode3, psomamenosNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AMenorExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMenor tmenorNode3;
        PSomaMenos psomamenosNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmenorNode3 = (TMenor)nodeArrayList2.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMenorExpLogica(pexpNode2, tmenorNode3, psomamenosNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AMaiorouigualExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMaiorigual tmaiorigualNode3;
        PSomaMenos psomamenosNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmaiorigualNode3 = (TMaiorigual)nodeArrayList2.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMaiorouigualExpLogica(pexpNode2, tmaiorigualNode3, psomamenosNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AMenorouigualExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMenorigual tmenorigualNode3;
        PSomaMenos psomamenosNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmenorigualNode3 = (TMenorigual)nodeArrayList2.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMenorouigualExpLogica(pexpNode2, tmenorigualNode3, psomamenosNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce ADiferenteExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TDiferente tdiferenteNode3;
        PSomaMenos psomamenosNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tdiferenteNode3 = (TDiferente)nodeArrayList2.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new ADiferenteExpLogica(pexpNode2, tdiferenteNode3, psomamenosNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AUniaoExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TE teNode3;
        PSomaMenos psomamenosNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AUniaoExpLogica(pexpNode2, teNode3, psomamenosNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AOExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TOu touNode3;
        PSomaMenos psomamenosNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AOExpLogica(pexpNode2, touNode3, psomamenosNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AXorrExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TXor txorNode3;
        PSomaMenos psomamenosNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        txorNode3 = (TXor)nodeArrayList2.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AXorrExpLogica(pexpNode2, txorNode3, psomamenosNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AMaisSomaMenos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaMenos psomamenosNode1;
        {
            // Block
        PSomaMenos psomamenosNode2;
        TMais tmaisNode3;
        PTermo ptermoNode4;
        psomamenosNode2 = (PSomaMenos)nodeArrayList1.get(0);
        tmaisNode3 = (TMais)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        psomamenosNode1 = new AMaisSomaMenos(psomamenosNode2, tmaisNode3, ptermoNode4);
        }
	nodeList.add(psomamenosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AMenosSomaMenos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaMenos psomamenosNode1;
        {
            // Block
        PSomaMenos psomamenosNode2;
        TMenos tmenosNode3;
        PTermo ptermoNode4;
        psomamenosNode2 = (PSomaMenos)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        psomamenosNode1 = new AMenosSomaMenos(psomamenosNode2, tmenosNode3, ptermoNode4);
        }
	nodeList.add(psomamenosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce ASomaMenos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaMenos psomamenosNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        psomamenosNode1 = new ASomaMenos(ptermoNode2);
        }
	nodeList.add(psomamenosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AMultiplicacaoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        TMult tmultNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new AMultiplicacaoTermo(ptermoNode2, tmultNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ATermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new ATermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ANumerointFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TNInt tnintNode2;
        tnintNode2 = (TNInt)nodeArrayList1.get(0);

        pfatorNode1 = new ANumerointFator(tnintNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AIdFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pfatorNode1 = new AIdFator(tidentificadorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AExpFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TEsqParen tesqparenNode2;
        PExp pexpNode3;
        TDirParen tdirparenNode4;
        tesqparenNode2 = (TEsqParen)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tdirparenNode4 = (TDirParen)nodeArrayList3.get(0);

        pfatorNode1 = new AExpFator(tesqparenNode2, pexpNode3, tdirparenNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AStrFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pfatorNode1 = new AStrFator(tstringNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce ALeiaConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoLeia pcomandoleiaNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoleiaNode3 = (PComandoLeia)nodeArrayList2.get(0);

        pconjcomandosNode1 = new ALeiaConjComandos(pconjcomandosNode2, pcomandoleiaNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AEscrevaConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoEscreva pcomandoescrevaNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoescrevaNode3 = (PComandoEscreva)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AEscrevaConjComandos(pconjcomandosNode2, pcomandoescrevaNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AAtribuiConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoAtribuicao pcomandoatribuicaoNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoatribuicaoNode3 = (PComandoAtribuicao)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AAtribuiConjComandos(pconjcomandosNode2, pcomandoatribuicaoNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ACondicionalConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoSe pcomandoseNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoseNode3 = (PComandoSe)nodeArrayList2.get(0);

        pconjcomandosNode1 = new ACondicionalConjComandos(pconjcomandosNode2, pcomandoseNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AEnquantoConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoEnquanto pcomandoenquantoNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoenquantoNode3 = (PComandoEnquanto)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AEnquantoConjComandos(pconjcomandosNode2, pcomandoenquantoNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce ARepitaConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoRepita pcomandorepitaNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandorepitaNode3 = (PComandoRepita)nodeArrayList2.get(0);

        pconjcomandosNode1 = new ARepitaConjComandos(pconjcomandosNode2, pcomandorepitaNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AFacaConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoPara pcomandoparaNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoparaNode3 = (PComandoPara)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AFacaConjComandos(pconjcomandosNode2, pcomandoparaNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AFacaPassoConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoParaPasso pcomandoparapassoNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoparapassoNode3 = (PComandoParaPasso)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AFacaPassoConjComandos(pconjcomandosNode2, pcomandoparapassoNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoAvalie pcomandoavalieNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoavalieNode3 = (PComandoAvalie)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AConjComandos(pconjcomandosNode2, pcomandoavalieNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AVazioConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PConjComandos pconjcomandosNode1;
        {
            // Block

        pconjcomandosNode1 = new AVazioConjComandos();
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AComandoLeia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoLeia pcomandoleiaNode1;
        {
            // Block
        TLeia tleiaNode2;
        TEsqParen tesqparenNode3;
        PVarDef pvardefNode4;
        TDirParen tdirparenNode5;
        TPontoevirgula tpontoevirgulaNode6;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        pvardefNode4 = (PVarDef)nodeArrayList3.get(0);
        tdirparenNode5 = (TDirParen)nodeArrayList4.get(0);
        tpontoevirgulaNode6 = (TPontoevirgula)nodeArrayList5.get(0);

        pcomandoleiaNode1 = new AComandoLeia(tleiaNode2, tesqparenNode3, pvardefNode4, tdirparenNode5, tpontoevirgulaNode6);
        }
	nodeList.add(pcomandoleiaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AComandoEscreva */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEscreva pcomandoescrevaNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode5;
        TPontoevirgula tpontoevirgulaNode6;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tdirparenNode5 = (TDirParen)nodeArrayList4.get(0);
        tpontoevirgulaNode6 = (TPontoevirgula)nodeArrayList5.get(0);

        pcomandoescrevaNode1 = new AComandoEscreva(tescrevaNode2, tesqparenNode3, pexpNode4, tdirparenNode5, tpontoevirgulaNode6);
        }
	nodeList.add(pcomandoescrevaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AComandoAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAtribuicao pcomandoatribuicaoNode1;
        {
            // Block
        PVarDef pvardefNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoevirgula tpontoevirgulaNode5;
        pvardefNode2 = (PVarDef)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoevirgula)nodeArrayList4.get(0);

        pcomandoatribuicaoNode1 = new AComandoAtribuicao(pvardefNode2, tatribuicaoNode3, pexpNode4, tpontoevirgulaNode5);
        }
	nodeList.add(pcomandoatribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce ASimplesComandoSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSe pcomandoseNode1;
        {
            // Block
        TSe tseNode2;
        TEsqParen tesqparenNode3;
        PExpLogica pexplogicaNode4;
        TDirParen tdirparenNode5;
        TEntao tentaoNode6;
        PConjComandos pconjcomandosNode7;
        TFimSe tfimseNode8;
        TPontoevirgula tpontoevirgulaNode9;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tdirparenNode5 = (TDirParen)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pconjcomandosNode7 = (PConjComandos)nodeArrayList6.get(0);
        tfimseNode8 = (TFimSe)nodeArrayList7.get(0);
        tpontoevirgulaNode9 = (TPontoevirgula)nodeArrayList8.get(0);

        pcomandoseNode1 = new ASimplesComandoSe(tseNode2, tesqparenNode3, pexplogicaNode4, tdirparenNode5, tentaoNode6, pconjcomandosNode7, tfimseNode8, tpontoevirgulaNode9);
        }
	nodeList.add(pcomandoseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce ACompletoComandoSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSe pcomandoseNode1;
        {
            // Block
        TSe tseNode2;
        TEsqParen tesqparenNode3;
        PExpLogica pexplogicaNode4;
        TDirParen tdirparenNode5;
        TEntao tentaoNode6;
        PConjComandos pconjcomandosNode7;
        TSenao tsenaoNode8;
        PDSenao pdsenaoNode9;
        TFimSe tfimseNode10;
        TPontoevirgula tpontoevirgulaNode11;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tdirparenNode5 = (TDirParen)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pconjcomandosNode7 = (PConjComandos)nodeArrayList6.get(0);
        tsenaoNode8 = (TSenao)nodeArrayList7.get(0);
        pdsenaoNode9 = (PDSenao)nodeArrayList8.get(0);
        tfimseNode10 = (TFimSe)nodeArrayList9.get(0);
        tpontoevirgulaNode11 = (TPontoevirgula)nodeArrayList10.get(0);

        pcomandoseNode1 = new ACompletoComandoSe(tseNode2, tesqparenNode3, pexplogicaNode4, tdirparenNode5, tentaoNode6, pconjcomandosNode7, tsenaoNode8, pdsenaoNode9, tfimseNode10, tpontoevirgulaNode11);
        }
	nodeList.add(pcomandoseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce ADSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDSenao pdsenaoNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);

        pdsenaoNode1 = new ADSenao(pconjcomandosNode2);
        }
	nodeList.add(pdsenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AEnquantoComandoEnquanto */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEnquanto pcomandoenquantoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TEsqParen tesqparenNode3;
        PExpLogica pexplogicaNode4;
        TDirParen tdirparenNode5;
        TFaca tfacaNode6;
        PConjComandos pconjcomandosNode7;
        TFimEnquanto tfimenquantoNode8;
        TPontoevirgula tpontoevirgulaNode9;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tdirparenNode5 = (TDirParen)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        pconjcomandosNode7 = (PConjComandos)nodeArrayList6.get(0);
        tfimenquantoNode8 = (TFimEnquanto)nodeArrayList7.get(0);
        tpontoevirgulaNode9 = (TPontoevirgula)nodeArrayList8.get(0);

        pcomandoenquantoNode1 = new AEnquantoComandoEnquanto(tenquantoNode2, tesqparenNode3, pexplogicaNode4, tdirparenNode5, tfacaNode6, pconjcomandosNode7, tfimenquantoNode8, tpontoevirgulaNode9);
        }
	nodeList.add(pcomandoenquantoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce ARepitaComandoRepita */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoRepita pcomandorepitaNode1;
        {
            // Block
        TRepita trepitaNode2;
        PConjComandos pconjcomandosNode3;
        TAte tateNode4;
        TEsqParen tesqparenNode5;
        PExpLogica pexplogicaNode6;
        TDirParen tdirparenNode7;
        TPontoevirgula tpontoevirgulaNode8;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        pconjcomandosNode3 = (PConjComandos)nodeArrayList2.get(0);
        tateNode4 = (TAte)nodeArrayList3.get(0);
        tesqparenNode5 = (TEsqParen)nodeArrayList4.get(0);
        pexplogicaNode6 = (PExpLogica)nodeArrayList5.get(0);
        tdirparenNode7 = (TDirParen)nodeArrayList6.get(0);
        tpontoevirgulaNode8 = (TPontoevirgula)nodeArrayList7.get(0);

        pcomandorepitaNode1 = new ARepitaComandoRepita(trepitaNode2, pconjcomandosNode3, tateNode4, tesqparenNode5, pexplogicaNode6, tdirparenNode7, tpontoevirgulaNode8);
        }
	nodeList.add(pcomandorepitaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AParaComandoPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoPara pcomandoparaNode1;
        {
            // Block
        TPara tparaNode2;
        PVarDef pvardefNode3;
        TDe tdeNode4;
        TNInt tnintNode5;
        TAte tateNode6;
        PComplementoPara pcomplementoparaNode7;
        TFaca tfacaNode8;
        PConjComandos pconjcomandosNode9;
        TFimPara tfimparaNode10;
        TPontoevirgula tpontoevirgulaNode11;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvardefNode3 = (PVarDef)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnintNode5 = (TNInt)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        pcomplementoparaNode7 = (PComplementoPara)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        pconjcomandosNode9 = (PConjComandos)nodeArrayList8.get(0);
        tfimparaNode10 = (TFimPara)nodeArrayList9.get(0);
        tpontoevirgulaNode11 = (TPontoevirgula)nodeArrayList10.get(0);

        pcomandoparaNode1 = new AParaComandoPara(tparaNode2, pvardefNode3, tdeNode4, tnintNode5, tateNode6, pcomplementoparaNode7, tfacaNode8, pconjcomandosNode9, tfimparaNode10, tpontoevirgulaNode11);
        }
	nodeList.add(pcomandoparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AComplementoPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComplementoPara pcomplementoparaNode1;
        {
            // Block
        TNInt tnintNode2;
        tnintNode2 = (TNInt)nodeArrayList1.get(0);

        pcomplementoparaNode1 = new AComplementoPara(tnintNode2);
        }
	nodeList.add(pcomplementoparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AComandoParaPasso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoParaPasso pcomandoparapassoNode1;
        {
            // Block
        TPara tparaNode2;
        PVarDef pvardefNode3;
        TDe tdeNode4;
        TNInt tnintNode5;
        TPasso tpassoNode6;
        PComplementoPara2 pcomplementopara2Node7;
        TAte tateNode8;
        PComplementoPara pcomplementoparaNode9;
        TFaca tfacaNode10;
        PConjComandos pconjcomandosNode11;
        TFimPara tfimparaNode12;
        TPontoevirgula tpontoevirgulaNode13;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvardefNode3 = (PVarDef)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnintNode5 = (TNInt)nodeArrayList4.get(0);
        tpassoNode6 = (TPasso)nodeArrayList5.get(0);
        pcomplementopara2Node7 = (PComplementoPara2)nodeArrayList6.get(0);
        tateNode8 = (TAte)nodeArrayList7.get(0);
        pcomplementoparaNode9 = (PComplementoPara)nodeArrayList8.get(0);
        tfacaNode10 = (TFaca)nodeArrayList9.get(0);
        pconjcomandosNode11 = (PConjComandos)nodeArrayList10.get(0);
        tfimparaNode12 = (TFimPara)nodeArrayList11.get(0);
        tpontoevirgulaNode13 = (TPontoevirgula)nodeArrayList12.get(0);

        pcomandoparapassoNode1 = new AComandoParaPasso(tparaNode2, pvardefNode3, tdeNode4, tnintNode5, tpassoNode6, pcomplementopara2Node7, tateNode8, pcomplementoparaNode9, tfacaNode10, pconjcomandosNode11, tfimparaNode12, tpontoevirgulaNode13);
        }
	nodeList.add(pcomandoparapassoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AComplementoPara2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComplementoPara2 pcomplementopara2Node1;
        {
            // Block
        TNInt tnintNode2;
        tnintNode2 = (TNInt)nodeArrayList1.get(0);

        pcomplementopara2Node1 = new AComplementoPara2(tnintNode2);
        }
	nodeList.add(pcomplementopara2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AAvalieComandoAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAvalie pcomandoavalieNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        PSenaoAvalie psenaoavalieNode8;
        TFimAvalie tfimavalieNode9;
        TPontoevirgula tpontoevirgulaNode10;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tdirparenNode5 = (TDirParen)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        psenaoavalieNode8 = (PSenaoAvalie)nodeArrayList6.get(0);
        tfimavalieNode9 = (TFimAvalie)nodeArrayList7.get(0);
        tpontoevirgulaNode10 = (TPontoevirgula)nodeArrayList8.get(0);

        pcomandoavalieNode1 = new AAvalieComandoAvalie(tavalieNode2, tesqparenNode3, pexpNode4, tdirparenNode5, listNode7, psenaoavalieNode8, tfimavalieNode9, tpontoevirgulaNode10);
        }
	nodeList.add(pcomandoavalieNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AComandoCaso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCaso pcomandocasoNode1;
        {
            // Block
        TCaso tcasoNode2;
        PValor pvalorNode3;
        TDoispontos tdoispontosNode4;
        PConjComandos pconjcomandosNode5;
        tcasoNode2 = (TCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoispontos)nodeArrayList3.get(0);
        pconjcomandosNode5 = (PConjComandos)nodeArrayList4.get(0);

        pcomandocasoNode1 = new AComandoCaso(tcasoNode2, pvalorNode3, tdoispontosNode4, pconjcomandosNode5);
        }
	nodeList.add(pcomandocasoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ASenaoAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoAvalie psenaoavalieNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoispontos tdoispontosNode3;
        PConjComandos pconjcomandosNode4;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pconjcomandosNode4 = (PConjComandos)nodeArrayList3.get(0);

        psenaoavalieNode1 = new ASenaoAvalie(tsenaoNode2, tdoispontosNode3, pconjcomandosNode4);
        }
	nodeList.add(psenaoavalieNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AVazioSenaoAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PSenaoAvalie psenaoavalieNode1;
        {
            // Block

        psenaoavalieNode1 = new AVazioSenaoAvalie();
        }
	nodeList.add(psenaoavalieNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ATerminal$ComandoCaso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComandoCaso pcomandocasoNode1;
        pcomandocasoNode1 = (PComandoCaso)nodeArrayList1.get(0);
	if(pcomandocasoNode1 != null)
	{
	  listNode2.add(pcomandocasoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce ANonTerminal$ComandoCaso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComandoCaso pcomandocasoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandocasoNode2 = (PComandoCaso)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandocasoNode2 != null)
	{
	  listNode3.add(pcomandocasoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {3, SHIFT, 1}, },
			{{-1, ERROR, 1}, {52, SHIFT, 3}, },
			{{-1, ERROR, 2}, {58, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {35, SHIFT, 4}, },
			{{-1, ERROR, 4}, {2, SHIFT, 5}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 48}, {6, SHIFT, 7}, {7, SHIFT, 8}, {8, SHIFT, 9}, {9, SHIFT, 10}, },
			{{-1, ERROR, 7}, {52, SHIFT, 14}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 12}, {34, SHIFT, 15}, },
			{{-1, ERROR, 13}, {0, SHIFT, 16}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 14}, {10, SHIFT, 35}, {11, SHIFT, 36}, {12, SHIFT, 37}, },
			{{-1, ERROR, 15}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 17}, {36, SHIFT, 41}, },
			{{-1, ERROR, 18}, {36, SHIFT, 42}, },
			{{-1, ERROR, 19}, {36, SHIFT, 43}, },
			{{-1, ERROR, 20}, {36, SHIFT, 44}, },
			{{-1, ERROR, 21}, {36, SHIFT, 45}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 23}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 8}, {40, SHIFT, 48}, },
			{{-1, ERROR, 25}, {32, SHIFT, 49}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 38}, {35, SHIFT, 50}, },
			{{-1, ERROR, 39}, {52, SHIFT, 24}, },
			{{-1, ERROR, 40}, {33, SHIFT, 52}, {35, SHIFT, 53}, },
			{{-1, ERROR, 41}, {52, SHIFT, 24}, },
			{{-1, ERROR, 42}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 57}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 43}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 57}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 44}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 57}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 45}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 57}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 46}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {24, SHIFT, 71}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 47}, {27, SHIFT, 72}, },
			{{-1, ERROR, 48}, {11, SHIFT, 73}, },
			{{-1, ERROR, 49}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 57}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, REDUCE, 5}, },
			{{-1, ERROR, 51}, {33, SHIFT, 75}, {35, SHIFT, 76}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 54}, {37, SHIFT, 77}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 57}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 58}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 57}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 59}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 61}, {37, SHIFT, 81}, {42, SHIFT, 82}, {43, SHIFT, 83}, {44, SHIFT, 84}, {45, SHIFT, 85}, {46, SHIFT, 86}, {47, SHIFT, 87}, {48, SHIFT, 88}, {49, SHIFT, 89}, {50, SHIFT, 90}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 16}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, REDUCE, 32}, {31, SHIFT, 93}, },
			{{-1, REDUCE, 34}, },
			{{-1, ERROR, 67}, {42, SHIFT, 82}, {43, SHIFT, 83}, {44, SHIFT, 84}, {45, SHIFT, 85}, {46, SHIFT, 86}, {47, SHIFT, 87}, {48, SHIFT, 88}, {49, SHIFT, 89}, {50, SHIFT, 90}, },
			{{-1, REDUCE, 17}, {37, SHIFT, 94}, },
			{{-1, ERROR, 69}, {37, SHIFT, 95}, {42, SHIFT, 82}, {43, SHIFT, 83}, {44, SHIFT, 84}, {45, SHIFT, 85}, {46, SHIFT, 86}, {47, SHIFT, 87}, {48, SHIFT, 88}, {49, SHIFT, 89}, {50, SHIFT, 90}, },
			{{-1, REDUCE, 17}, {37, SHIFT, 96}, },
			{{-1, ERROR, 71}, {36, SHIFT, 97}, },
			{{-1, ERROR, 72}, {11, SHIFT, 98}, },
			{{-1, ERROR, 73}, {41, SHIFT, 99}, },
			{{-1, ERROR, 74}, {35, SHIFT, 100}, {42, SHIFT, 82}, {43, SHIFT, 83}, {44, SHIFT, 84}, {45, SHIFT, 85}, {46, SHIFT, 86}, {47, SHIFT, 87}, {48, SHIFT, 88}, {49, SHIFT, 89}, {50, SHIFT, 90}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 77}, {35, SHIFT, 101}, },
			{{-1, REDUCE, 18}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, ERROR, 79}, {37, SHIFT, 102}, {42, SHIFT, 82}, {43, SHIFT, 83}, {44, SHIFT, 84}, {45, SHIFT, 85}, {46, SHIFT, 86}, {47, SHIFT, 87}, {48, SHIFT, 88}, {49, SHIFT, 89}, {50, SHIFT, 90}, },
			{{-1, REDUCE, 20}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, ERROR, 81}, {35, SHIFT, 103}, },
			{{-1, ERROR, 82}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 83}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 84}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 85}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 86}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 87}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 88}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 89}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 90}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 91}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 92}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 93}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 94}, {15, SHIFT, 116}, },
			{{-1, ERROR, 95}, {19, SHIFT, 117}, },
			{{-1, ERROR, 96}, {21, SHIFT, 120}, },
			{{-1, ERROR, 97}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 57}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 98}, {24, SHIFT, 122}, {28, SHIFT, 123}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 21}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, REDUCE, 22}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, REDUCE, 23}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, REDUCE, 24}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, REDUCE, 25}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, REDUCE, 26}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, REDUCE, 27}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, REDUCE, 28}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, REDUCE, 29}, {29, SHIFT, 91}, {30, SHIFT, 92}, },
			{{-1, REDUCE, 30}, {31, SHIFT, 93}, },
			{{-1, REDUCE, 31}, {31, SHIFT, 93}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 117}, {10, SHIFT, 35}, {11, SHIFT, 36}, {12, SHIFT, 37}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 64}, {16, SHIFT, 126}, {19, SHIFT, 117}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 17}, {37, SHIFT, 130}, },
			{{-1, ERROR, 122}, {11, SHIFT, 131}, },
			{{-1, ERROR, 123}, {11, SHIFT, 133}, },
			{{-1, ERROR, 124}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {14, SHIFT, 135}, {16, SHIFT, 136}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 125}, {34, SHIFT, 137}, },
			{{-1, ERROR, 126}, {34, SHIFT, 138}, },
			{{-1, REDUCE, 66}, },
			{{-1, ERROR, 128}, {18, SHIFT, 139}, },
			{{-1, ERROR, 129}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {22, SHIFT, 140}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 130}, {35, SHIFT, 141}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 132}, {21, SHIFT, 142}, },
			{{-1, REDUCE, 60}, },
			{{-1, ERROR, 134}, {24, SHIFT, 143}, },
			{{-1, ERROR, 135}, {35, SHIFT, 144}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 139}, {35, SHIFT, 149}, },
			{{-1, ERROR, 140}, {35, SHIFT, 150}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 143}, {11, SHIFT, 131}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 54}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 146}, {14, SHIFT, 153}, },
			{{-1, REDUCE, 62}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 63}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 55}, },
			{{-1, ERROR, 151}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {26, SHIFT, 154}, {52, SHIFT, 24}, },
			{{-1, ERROR, 152}, {21, SHIFT, 155}, },
			{{-1, ERROR, 153}, {35, SHIFT, 156}, },
			{{-1, ERROR, 154}, {35, SHIFT, 157}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 158}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {26, SHIFT, 159}, {52, SHIFT, 24}, },
			{{-1, ERROR, 159}, {35, SHIFT, 160}, },
			{{-1, REDUCE, 59}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 6}, },
			{{-1, 11}, },
			{{-1, 39}, },
			{{-1, 25}, {15, 40}, {23, 47}, {39, 51}, {41, 54}, },
			{{-1, 12}, },
			{{-1, 38}, {117, 125}, },
			{{-1, 67}, {42, 61}, {44, 69}, {49, 74}, {58, 79}, },
			{{-1, 62}, },
			{{-1, 63}, {43, 68}, {45, 70}, {97, 121}, },
			{{-1, 64}, {57, 78}, {59, 80}, {82, 104}, {83, 105}, {84, 106}, {85, 107}, {86, 108}, {87, 109}, {88, 110}, {89, 111}, {90, 112}, },
			{{-1, 65}, {91, 113}, {92, 114}, },
			{{-1, 66}, {93, 115}, },
			{{-1, 13}, {22, 46}, {116, 124}, {120, 129}, {136, 145}, {137, 147}, {138, 148}, {142, 151}, {155, 158}, },
			{{-1, 26}, },
			{{-1, 27}, },
			{{-1, 28}, },
			{{-1, 29}, },
			{{-1, 146}, },
			{{-1, 30}, },
			{{-1, 31}, },
			{{-1, 32}, },
			{{-1, 132}, {143, 152}, },
			{{-1, 33}, },
			{{-1, 134}, },
			{{-1, 34}, },
			{{-1, 118}, {119, 127}, },
			{{-1, 128}, },
			{{-1, 119}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: identificador",
			"expecting: EOF",
			"expecting: ';'",
			"expecting: 'inicio'",
			"expecting: 'fim.', 'leia', 'escreva', 'const', 'inteiro', 'real', 'caractere', 'se', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: ':'",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: string, n int, n real",
			"expecting: '('",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'ate', 'para', identificador",
			"expecting: 'de', '<-', ',', ';', ')', '['",
			"expecting: '<-'",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'fim se', 'senao', 'avalie', 'fim avalie', 'caso', 'enquanto', 'fim enquanto', 'repita', 'ate', 'para', 'fim para', identificador",
			"expecting: ':', ';'",
			"expecting: ',', ';'",
			"expecting: string, n int, '-', '(', 'nao', identificador",
			"expecting: 'de'",
			"expecting: n int",
			"expecting: ')'",
			"expecting: '+', '-', '*', ';', ')', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: string, n int, '(', identificador",
			"expecting: ')', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: ';', ')', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: '+', '-', ';', ')', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: ']'",
			"expecting: ';', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: 'entao'",
			"expecting: 'caso'",
			"expecting: 'faca'",
			"expecting: 'ate', 'passo'",
			"expecting: 'de', '<-', ',', ';', ')'",
			"expecting: 'leia', 'escreva', 'se', 'fim se', 'senao', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'senao', 'fim avalie', 'caso'",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'fim enquanto', 'repita', 'para', identificador",
			"expecting: 'fim avalie'",
			"expecting: 'ate'",
			"expecting: 'leia', 'escreva', 'se', 'fim se', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'avalie', 'fim avalie', 'caso', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'fim avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', 'fim para', identificador",
			"expecting: 'fim se'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 5, 1, 6, 6, 6, 5, 6, 7, 8, 1, 2, 9, 9, 9, 9, 9, 10, 1, 11, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 3, 1, 15, 1, 16, 16, 16, 16, 10, 17, 18, 16, 5, 15, 1, 5, 19, 20, 20, 21, 16, 21, 20, 22, 23, 23, 24, 20, 20, 25, 22, 22, 22, 9, 18, 26, 27, 1, 5, 3, 24, 22, 24, 3, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 28, 29, 30, 16, 31, 32, 13, 13, 20, 13, 24, 24, 24, 24, 24, 24, 24, 24, 24, 20, 20, 20, 33, 8, 34, 34, 35, 22, 18, 18, 33, 6, 6, 34, 36, 35, 3, 30, 30, 37, 37, 3, 38, 39, 40, 3, 3, 13, 41, 18, 13, 38, 42, 39, 40, 13, 13, 41, 30, 3, 3, 41, 13, 13, 41, 3, 13, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
