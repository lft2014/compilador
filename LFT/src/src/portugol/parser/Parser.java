/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.parser;

import portugol.lexer.*;
import portugol.node.*;
import portugol.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce APrograma */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce ADeclaracoes */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list);
            }
            break;
            case 2: /* reduce AVazioDeclaracoes */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce AMultiplasDeclaracaoConj */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list);
            }
            break;
            case 4: /* reduce ASimplesDeclaracaoConj */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list);
            }
            break;
            case 5: /* reduce AConstDeclaracaoConj */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list);
            }
            break;
            case 6: /* reduce AMultiplasDeclaracaoVarLista */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list);
            }
            break;
            case 7: /* reduce ASimplesDeclaracaoVarLista */
            {
                ArrayList<Object> list = new7();
                push(goTo(3), list);
            }
            break;
            case 8: /* reduce AVarDef */
            {
                ArrayList<Object> list = new8();
                push(goTo(4), list);
            }
            break;
            case 9: /* reduce AVetorVarDef */
            {
                ArrayList<Object> list = new9();
                push(goTo(4), list);
            }
            break;
            case 10: /* reduce AIntTipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(5), list);
            }
            break;
            case 11: /* reduce ATipo */
            {
                ArrayList<Object> list = new11();
                push(goTo(5), list);
            }
            break;
            case 12: /* reduce ACTipo */
            {
                ArrayList<Object> list = new12();
                push(goTo(5), list);
            }
            break;
            case 13: /* reduce AIntValor */
            {
                ArrayList<Object> list = new13();
                push(goTo(6), list);
            }
            break;
            case 14: /* reduce AValor */
            {
                ArrayList<Object> list = new14();
                push(goTo(6), list);
            }
            break;
            case 15: /* reduce AStrValor */
            {
                ArrayList<Object> list = new15();
                push(goTo(6), list);
            }
            break;
            case 16: /* reduce ANExpnLogica */
            {
                ArrayList<Object> list = new16();
                push(goTo(7), list);
            }
            break;
            case 17: /* reduce AIgual$Expressoes1ExpLogica */
            {
                ArrayList<Object> list = new17();
                push(goTo(8), list);
            }
            break;
            case 18: /* reduce AIgual$1ExpLogica */
            {
                ArrayList<Object> list = new18();
                push(goTo(8), list);
            }
            break;
            case 19: /* reduce AIgual$M1ExpLogica */
            {
                ArrayList<Object> list = new19();
                push(goTo(8), list);
            }
            break;
            case 20: /* reduce AIgual$Naologica1ExpLogica */
            {
                ArrayList<Object> list = new20();
                push(goTo(8), list);
            }
            break;
            case 21: /* reduce AMaior$Expressoes1ExpLogica */
            {
                ArrayList<Object> list = new21();
                push(goTo(8), list);
            }
            break;
            case 22: /* reduce AMaior$1ExpLogica */
            {
                ArrayList<Object> list = new22();
                push(goTo(8), list);
            }
            break;
            case 23: /* reduce AMaior$M1ExpLogica */
            {
                ArrayList<Object> list = new23();
                push(goTo(8), list);
            }
            break;
            case 24: /* reduce AMaior$Naologica1ExpLogica */
            {
                ArrayList<Object> list = new24();
                push(goTo(8), list);
            }
            break;
            case 25: /* reduce AMenor$Expressoes1ExpLogica */
            {
                ArrayList<Object> list = new25();
                push(goTo(8), list);
            }
            break;
            case 26: /* reduce AMenor$1ExpLogica */
            {
                ArrayList<Object> list = new26();
                push(goTo(8), list);
            }
            break;
            case 27: /* reduce AMenor$M1ExpLogica */
            {
                ArrayList<Object> list = new27();
                push(goTo(8), list);
            }
            break;
            case 28: /* reduce AMenor$Naologica1ExpLogica */
            {
                ArrayList<Object> list = new28();
                push(goTo(8), list);
            }
            break;
            case 29: /* reduce AMaiorouigual$Expressoes1ExpLogica */
            {
                ArrayList<Object> list = new29();
                push(goTo(8), list);
            }
            break;
            case 30: /* reduce AMaiorouigual$1ExpLogica */
            {
                ArrayList<Object> list = new30();
                push(goTo(8), list);
            }
            break;
            case 31: /* reduce AMaiorouigual$M1ExpLogica */
            {
                ArrayList<Object> list = new31();
                push(goTo(8), list);
            }
            break;
            case 32: /* reduce AMaiorouigual$Naologica1ExpLogica */
            {
                ArrayList<Object> list = new32();
                push(goTo(8), list);
            }
            break;
            case 33: /* reduce AMenorouigual$Expressoes1ExpLogica */
            {
                ArrayList<Object> list = new33();
                push(goTo(8), list);
            }
            break;
            case 34: /* reduce AMenorouigual$1ExpLogica */
            {
                ArrayList<Object> list = new34();
                push(goTo(8), list);
            }
            break;
            case 35: /* reduce AMenorouigual$M1ExpLogica */
            {
                ArrayList<Object> list = new35();
                push(goTo(8), list);
            }
            break;
            case 36: /* reduce AMenorouigual$Naologica1ExpLogica */
            {
                ArrayList<Object> list = new36();
                push(goTo(8), list);
            }
            break;
            case 37: /* reduce ADiferente$Expressoes1ExpLogica */
            {
                ArrayList<Object> list = new37();
                push(goTo(8), list);
            }
            break;
            case 38: /* reduce ADiferente$1ExpLogica */
            {
                ArrayList<Object> list = new38();
                push(goTo(8), list);
            }
            break;
            case 39: /* reduce ADiferente$M1ExpLogica */
            {
                ArrayList<Object> list = new39();
                push(goTo(8), list);
            }
            break;
            case 40: /* reduce ADiferente$Naologica1ExpLogica */
            {
                ArrayList<Object> list = new40();
                push(goTo(8), list);
            }
            break;
            case 41: /* reduce AUniao$Expressoes1ExpLogica */
            {
                ArrayList<Object> list = new41();
                push(goTo(8), list);
            }
            break;
            case 42: /* reduce AUniao$1ExpLogica */
            {
                ArrayList<Object> list = new42();
                push(goTo(8), list);
            }
            break;
            case 43: /* reduce AUniao$M1ExpLogica */
            {
                ArrayList<Object> list = new43();
                push(goTo(8), list);
            }
            break;
            case 44: /* reduce AUniao$Naologica1ExpLogica */
            {
                ArrayList<Object> list = new44();
                push(goTo(8), list);
            }
            break;
            case 45: /* reduce AO$Expressoes1ExpLogica */
            {
                ArrayList<Object> list = new45();
                push(goTo(8), list);
            }
            break;
            case 46: /* reduce AO$1ExpLogica */
            {
                ArrayList<Object> list = new46();
                push(goTo(8), list);
            }
            break;
            case 47: /* reduce AO$M1ExpLogica */
            {
                ArrayList<Object> list = new47();
                push(goTo(8), list);
            }
            break;
            case 48: /* reduce AO$Naologica1ExpLogica */
            {
                ArrayList<Object> list = new48();
                push(goTo(8), list);
            }
            break;
            case 49: /* reduce AXorr$Expressoes1ExpLogica */
            {
                ArrayList<Object> list = new49();
                push(goTo(8), list);
            }
            break;
            case 50: /* reduce AXorr$1ExpLogica */
            {
                ArrayList<Object> list = new50();
                push(goTo(8), list);
            }
            break;
            case 51: /* reduce AXorr$M1ExpLogica */
            {
                ArrayList<Object> list = new51();
                push(goTo(8), list);
            }
            break;
            case 52: /* reduce AXorr$Naologica1ExpLogica */
            {
                ArrayList<Object> list = new52();
                push(goTo(8), list);
            }
            break;
            case 53: /* reduce AMaisSomaMenos */
            {
                ArrayList<Object> list = new53();
                push(goTo(9), list);
            }
            break;
            case 54: /* reduce AMenosSomaMenos */
            {
                ArrayList<Object> list = new54();
                push(goTo(9), list);
            }
            break;
            case 55: /* reduce ASomaMenos */
            {
                ArrayList<Object> list = new55();
                push(goTo(9), list);
            }
            break;
            case 56: /* reduce AMultiplicacaoTermo */
            {
                ArrayList<Object> list = new56();
                push(goTo(10), list);
            }
            break;
            case 57: /* reduce ATermo */
            {
                ArrayList<Object> list = new57();
                push(goTo(10), list);
            }
            break;
            case 58: /* reduce ANumerointFator */
            {
                ArrayList<Object> list = new58();
                push(goTo(11), list);
            }
            break;
            case 59: /* reduce AIdFator */
            {
                ArrayList<Object> list = new59();
                push(goTo(11), list);
            }
            break;
            case 60: /* reduce AExp$Expressoes1Fator */
            {
                ArrayList<Object> list = new60();
                push(goTo(11), list);
            }
            break;
            case 61: /* reduce AExp$1Fator */
            {
                ArrayList<Object> list = new61();
                push(goTo(11), list);
            }
            break;
            case 62: /* reduce AExp$M1Fator */
            {
                ArrayList<Object> list = new62();
                push(goTo(11), list);
            }
            break;
            case 63: /* reduce AExp$Naologica1Fator */
            {
                ArrayList<Object> list = new63();
                push(goTo(11), list);
            }
            break;
            case 64: /* reduce AStrFator */
            {
                ArrayList<Object> list = new64();
                push(goTo(11), list);
            }
            break;
            case 65: /* reduce ALeiaConjComandos */
            {
                ArrayList<Object> list = new65();
                push(goTo(12), list);
            }
            break;
            case 66: /* reduce AEscrevaConjComandos */
            {
                ArrayList<Object> list = new66();
                push(goTo(12), list);
            }
            break;
            case 67: /* reduce AAtribuiConjComandos */
            {
                ArrayList<Object> list = new67();
                push(goTo(12), list);
            }
            break;
            case 68: /* reduce ACondicionalConjComandos */
            {
                ArrayList<Object> list = new68();
                push(goTo(12), list);
            }
            break;
            case 69: /* reduce AEnquantoConjComandos */
            {
                ArrayList<Object> list = new69();
                push(goTo(12), list);
            }
            break;
            case 70: /* reduce ARepitaConjComandos */
            {
                ArrayList<Object> list = new70();
                push(goTo(12), list);
            }
            break;
            case 71: /* reduce AFacaConjComandos */
            {
                ArrayList<Object> list = new71();
                push(goTo(12), list);
            }
            break;
            case 72: /* reduce AFacaPassoConjComandos */
            {
                ArrayList<Object> list = new72();
                push(goTo(12), list);
            }
            break;
            case 73: /* reduce AConjComandos */
            {
                ArrayList<Object> list = new73();
                push(goTo(12), list);
            }
            break;
            case 74: /* reduce AVazioConjComandos */
            {
                ArrayList<Object> list = new74();
                push(goTo(12), list);
            }
            break;
            case 75: /* reduce AComandoLeia */
            {
                ArrayList<Object> list = new75();
                push(goTo(13), list);
            }
            break;
            case 76: /* reduce AExpressoes1ComandoEscreva */
            {
                ArrayList<Object> list = new76();
                push(goTo(14), list);
            }
            break;
            case 77: /* reduce A1ComandoEscreva */
            {
                ArrayList<Object> list = new77();
                push(goTo(14), list);
            }
            break;
            case 78: /* reduce AM1ComandoEscreva */
            {
                ArrayList<Object> list = new78();
                push(goTo(14), list);
            }
            break;
            case 79: /* reduce ANaologica1ComandoEscreva */
            {
                ArrayList<Object> list = new79();
                push(goTo(14), list);
            }
            break;
            case 80: /* reduce AExpressoes1ComandoAtribuicao */
            {
                ArrayList<Object> list = new80();
                push(goTo(15), list);
            }
            break;
            case 81: /* reduce A1ComandoAtribuicao */
            {
                ArrayList<Object> list = new81();
                push(goTo(15), list);
            }
            break;
            case 82: /* reduce AM1ComandoAtribuicao */
            {
                ArrayList<Object> list = new82();
                push(goTo(15), list);
            }
            break;
            case 83: /* reduce ANaologica1ComandoAtribuicao */
            {
                ArrayList<Object> list = new83();
                push(goTo(15), list);
            }
            break;
            case 84: /* reduce ASimplesComandoSe */
            {
                ArrayList<Object> list = new84();
                push(goTo(16), list);
            }
            break;
            case 85: /* reduce ACompleto$Expressoes1ComandoSe */
            {
                ArrayList<Object> list = new85();
                push(goTo(16), list);
            }
            break;
            case 86: /* reduce ACompleto$1ComandoSe */
            {
                ArrayList<Object> list = new86();
                push(goTo(16), list);
            }
            break;
            case 87: /* reduce ACompleto$M1ComandoSe */
            {
                ArrayList<Object> list = new87();
                push(goTo(16), list);
            }
            break;
            case 88: /* reduce ACompleto$Naologica1ComandoSe */
            {
                ArrayList<Object> list = new88();
                push(goTo(16), list);
            }
            break;
            case 89: /* reduce ADSenao */
            {
                ArrayList<Object> list = new89();
                push(goTo(17), list);
            }
            break;
            case 90: /* reduce AEnquantoComandoEnquanto */
            {
                ArrayList<Object> list = new90();
                push(goTo(18), list);
            }
            break;
            case 91: /* reduce ARepitaComandoRepita */
            {
                ArrayList<Object> list = new91();
                push(goTo(19), list);
            }
            break;
            case 92: /* reduce AParaComandoPara */
            {
                ArrayList<Object> list = new92();
                push(goTo(20), list);
            }
            break;
            case 93: /* reduce AComplementoPara */
            {
                ArrayList<Object> list = new93();
                push(goTo(21), list);
            }
            break;
            case 94: /* reduce AComandoParaPasso */
            {
                ArrayList<Object> list = new94();
                push(goTo(22), list);
            }
            break;
            case 95: /* reduce AComplementoPara2 */
            {
                ArrayList<Object> list = new95();
                push(goTo(23), list);
            }
            break;
            case 96: /* reduce AAvalie$Expressoes1ComandoAvalie */
            {
                ArrayList<Object> list = new96();
                push(goTo(24), list);
            }
            break;
            case 97: /* reduce AAvalie$1ComandoAvalie */
            {
                ArrayList<Object> list = new97();
                push(goTo(24), list);
            }
            break;
            case 98: /* reduce AAvalie$M1ComandoAvalie */
            {
                ArrayList<Object> list = new98();
                push(goTo(24), list);
            }
            break;
            case 99: /* reduce AAvalie$Naologica1ComandoAvalie */
            {
                ArrayList<Object> list = new99();
                push(goTo(24), list);
            }
            break;
            case 100: /* reduce ASenaoAvalie */
            {
                ArrayList<Object> list = new100();
                push(goTo(25), list);
            }
            break;
            case 101: /* reduce AVazioSenaoAvalie */
            {
                ArrayList<Object> list = new101();
                push(goTo(25), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce APrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TPontoevirgula tpontoevirgulaNode4;
        TInicio tinicioNode5;
        PDeclaracoes pdeclaracoesNode6;
        PConjComandos pconjcomandosNode7;
        TFim tfimNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tpontoevirgulaNode4 = (TPontoevirgula)nodeArrayList3.get(0);
        tinicioNode5 = (TInicio)nodeArrayList4.get(0);
        pdeclaracoesNode6 = (PDeclaracoes)nodeArrayList5.get(0);
        pconjcomandosNode7 = (PConjComandos)nodeArrayList6.get(0);
        tfimNode8 = (TFim)nodeArrayList7.get(0);

        pprogramaNode1 = new APrograma(tprogramaNode2, tidentificadorNode3, tpontoevirgulaNode4, tinicioNode5, pdeclaracoesNode6, pconjcomandosNode7, tfimNode8);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce ADeclaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoes pdeclaracoesNode1;
        {
            // Block
        PDeclaracoes pdeclaracoesNode2;
        PDeclaracaoConj pdeclaracaoconjNode3;
        pdeclaracoesNode2 = (PDeclaracoes)nodeArrayList1.get(0);
        pdeclaracaoconjNode3 = (PDeclaracaoConj)nodeArrayList2.get(0);

        pdeclaracoesNode1 = new ADeclaracoes(pdeclaracoesNode2, pdeclaracaoconjNode3);
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AVazioDeclaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PDeclaracoes pdeclaracoesNode1;
        {
            // Block

        pdeclaracoesNode1 = new AVazioDeclaracoes();
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AMultiplasDeclaracaoConj */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoConj pdeclaracaoconjNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoispontos tdoispontosNode3;
        PDeclaracaoVarLista pdeclaracaovarlistaNode4;
        PVarDef pvardefNode5;
        TPontoevirgula tpontoevirgulaNode6;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pdeclaracaovarlistaNode4 = (PDeclaracaoVarLista)nodeArrayList3.get(0);
        pvardefNode5 = (PVarDef)nodeArrayList4.get(0);
        tpontoevirgulaNode6 = (TPontoevirgula)nodeArrayList5.get(0);

        pdeclaracaoconjNode1 = new AMultiplasDeclaracaoConj(ptipoNode2, tdoispontosNode3, pdeclaracaovarlistaNode4, pvardefNode5, tpontoevirgulaNode6);
        }
	nodeList.add(pdeclaracaoconjNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ASimplesDeclaracaoConj */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoConj pdeclaracaoconjNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoispontos tdoispontosNode3;
        PVarDef pvardefNode4;
        TPontoevirgula tpontoevirgulaNode5;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pvardefNode4 = (PVarDef)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoevirgula)nodeArrayList4.get(0);

        pdeclaracaoconjNode1 = new ASimplesDeclaracaoConj(ptipoNode2, tdoispontosNode3, pvardefNode4, tpontoevirgulaNode5);
        }
	nodeList.add(pdeclaracaoconjNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AConstDeclaracaoConj */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoConj pdeclaracaoconjNode1;
        {
            // Block
        TConst tconstNode2;
        TIdentificador tidentificadorNode3;
        PValor pvalorNode4;
        TPontoevirgula tpontoevirgulaNode5;
        tconstNode2 = (TConst)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoevirgula)nodeArrayList4.get(0);

        pdeclaracaoconjNode1 = new AConstDeclaracaoConj(tconstNode2, tidentificadorNode3, pvalorNode4, tpontoevirgulaNode5);
        }
	nodeList.add(pdeclaracaoconjNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AMultiplasDeclaracaoVarLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVarLista pdeclaracaovarlistaNode1;
        {
            // Block
        PDeclaracaoVarLista pdeclaracaovarlistaNode2;
        PVarDef pvardefNode3;
        TVirgula tvirgulaNode4;
        pdeclaracaovarlistaNode2 = (PDeclaracaoVarLista)nodeArrayList1.get(0);
        pvardefNode3 = (PVarDef)nodeArrayList2.get(0);
        tvirgulaNode4 = (TVirgula)nodeArrayList3.get(0);

        pdeclaracaovarlistaNode1 = new AMultiplasDeclaracaoVarLista(pdeclaracaovarlistaNode2, pvardefNode3, tvirgulaNode4);
        }
	nodeList.add(pdeclaracaovarlistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ASimplesDeclaracaoVarLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVarLista pdeclaracaovarlistaNode1;
        {
            // Block
        PVarDef pvardefNode2;
        TVirgula tvirgulaNode3;
        pvardefNode2 = (PVarDef)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pdeclaracaovarlistaNode1 = new ASimplesDeclaracaoVarLista(pvardefNode2, tvirgulaNode3);
        }
	nodeList.add(pdeclaracaovarlistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AVarDef */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarDef pvardefNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvardefNode1 = new AVarDef(tidentificadorNode2);
        }
	nodeList.add(pvardefNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AVetorVarDef */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarDef pvardefNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TEsqColchete tesqcolcheteNode3;
        TNInt tnintNode4;
        TDirColchete tdircolcheteNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tesqcolcheteNode3 = (TEsqColchete)nodeArrayList2.get(0);
        tnintNode4 = (TNInt)nodeArrayList3.get(0);
        tdircolcheteNode5 = (TDirColchete)nodeArrayList4.get(0);

        pvardefNode1 = new AVetorVarDef(tidentificadorNode2, tesqcolcheteNode3, tnintNode4, tdircolcheteNode5);
        }
	nodeList.add(pvardefNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AIntTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AIntTipo(tinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ATipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoNode1 = new ATipo(trealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ACTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ACTipo(tcaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AIntValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNInt tnintNode2;
        tnintNode2 = (TNInt)nodeArrayList1.get(0);

        pvalorNode1 = new AIntValor(tnintNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNReal tnrealNode2;
        tnrealNode2 = (TNReal)nodeArrayList1.get(0);

        pvalorNode1 = new AValor(tnrealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AStrValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStrValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce ANExpnLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpnLogica pexpnlogicaNode1;
        {
            // Block
        TNao tnaoNode2;
        PSomaMenos psomamenosNode3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        psomamenosNode3 = (PSomaMenos)nodeArrayList2.get(0);

        pexpnlogicaNode1 = new ANExpnLogica(tnaoNode2, psomamenosNode3);
        }
	nodeList.add(pexpnlogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AIgual$Expressoes1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TIgual tigualNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PSomaMenos psomamenosNode3;
        psomamenosNode3 = (PSomaMenos)nodeArrayList1.get(0);

        pexpNode2 = new AExpressoesExp(psomamenosNode3);
        }
        tigualNode4 = (TIgual)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AIgualExpLogica(pexpNode2, tigualNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AIgual$1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TIgual tigualNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpLogica pexplogicaNode3;
        pexplogicaNode3 = (PExpLogica)nodeArrayList1.get(0);

        pexpNode2 = new AExp(pexplogicaNode3);
        }
        tigualNode4 = (TIgual)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AIgualExpLogica(pexpNode2, tigualNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AIgual$M1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TIgual tigualNode5;
        PSomaMenos psomamenosNode6;
        {
            // Block
        TMenos tmenosNode3;
        PSomaMenos psomamenosNode4;
        tmenosNode3 = (TMenos)nodeArrayList1.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode2 = new AMExp(tmenosNode3, psomamenosNode4);
        }
        tigualNode5 = (TIgual)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexplogicaNode1 = new AIgualExpLogica(pexpNode2, tigualNode5, psomamenosNode6);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AIgual$Naologica1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TIgual tigualNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpnLogica pexpnlogicaNode3;
        pexpnlogicaNode3 = (PExpnLogica)nodeArrayList1.get(0);

        pexpNode2 = new ANaologicaExp(pexpnlogicaNode3);
        }
        tigualNode4 = (TIgual)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AIgualExpLogica(pexpNode2, tigualNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AMaior$Expressoes1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMaior tmaiorNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PSomaMenos psomamenosNode3;
        psomamenosNode3 = (PSomaMenos)nodeArrayList1.get(0);

        pexpNode2 = new AExpressoesExp(psomamenosNode3);
        }
        tmaiorNode4 = (TMaior)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMaiorExpLogica(pexpNode2, tmaiorNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AMaior$1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMaior tmaiorNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpLogica pexplogicaNode3;
        pexplogicaNode3 = (PExpLogica)nodeArrayList1.get(0);

        pexpNode2 = new AExp(pexplogicaNode3);
        }
        tmaiorNode4 = (TMaior)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMaiorExpLogica(pexpNode2, tmaiorNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AMaior$M1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMaior tmaiorNode5;
        PSomaMenos psomamenosNode6;
        {
            // Block
        TMenos tmenosNode3;
        PSomaMenos psomamenosNode4;
        tmenosNode3 = (TMenos)nodeArrayList1.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode2 = new AMExp(tmenosNode3, psomamenosNode4);
        }
        tmaiorNode5 = (TMaior)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexplogicaNode1 = new AMaiorExpLogica(pexpNode2, tmaiorNode5, psomamenosNode6);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AMaior$Naologica1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMaior tmaiorNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpnLogica pexpnlogicaNode3;
        pexpnlogicaNode3 = (PExpnLogica)nodeArrayList1.get(0);

        pexpNode2 = new ANaologicaExp(pexpnlogicaNode3);
        }
        tmaiorNode4 = (TMaior)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMaiorExpLogica(pexpNode2, tmaiorNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AMenor$Expressoes1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMenor tmenorNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PSomaMenos psomamenosNode3;
        psomamenosNode3 = (PSomaMenos)nodeArrayList1.get(0);

        pexpNode2 = new AExpressoesExp(psomamenosNode3);
        }
        tmenorNode4 = (TMenor)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMenorExpLogica(pexpNode2, tmenorNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AMenor$1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMenor tmenorNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpLogica pexplogicaNode3;
        pexplogicaNode3 = (PExpLogica)nodeArrayList1.get(0);

        pexpNode2 = new AExp(pexplogicaNode3);
        }
        tmenorNode4 = (TMenor)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMenorExpLogica(pexpNode2, tmenorNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AMenor$M1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMenor tmenorNode5;
        PSomaMenos psomamenosNode6;
        {
            // Block
        TMenos tmenosNode3;
        PSomaMenos psomamenosNode4;
        tmenosNode3 = (TMenos)nodeArrayList1.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode2 = new AMExp(tmenosNode3, psomamenosNode4);
        }
        tmenorNode5 = (TMenor)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexplogicaNode1 = new AMenorExpLogica(pexpNode2, tmenorNode5, psomamenosNode6);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AMenor$Naologica1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMenor tmenorNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpnLogica pexpnlogicaNode3;
        pexpnlogicaNode3 = (PExpnLogica)nodeArrayList1.get(0);

        pexpNode2 = new ANaologicaExp(pexpnlogicaNode3);
        }
        tmenorNode4 = (TMenor)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMenorExpLogica(pexpNode2, tmenorNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AMaiorouigual$Expressoes1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMaiorigual tmaiorigualNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PSomaMenos psomamenosNode3;
        psomamenosNode3 = (PSomaMenos)nodeArrayList1.get(0);

        pexpNode2 = new AExpressoesExp(psomamenosNode3);
        }
        tmaiorigualNode4 = (TMaiorigual)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMaiorouigualExpLogica(pexpNode2, tmaiorigualNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AMaiorouigual$1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMaiorigual tmaiorigualNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpLogica pexplogicaNode3;
        pexplogicaNode3 = (PExpLogica)nodeArrayList1.get(0);

        pexpNode2 = new AExp(pexplogicaNode3);
        }
        tmaiorigualNode4 = (TMaiorigual)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMaiorouigualExpLogica(pexpNode2, tmaiorigualNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AMaiorouigual$M1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMaiorigual tmaiorigualNode5;
        PSomaMenos psomamenosNode6;
        {
            // Block
        TMenos tmenosNode3;
        PSomaMenos psomamenosNode4;
        tmenosNode3 = (TMenos)nodeArrayList1.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode2 = new AMExp(tmenosNode3, psomamenosNode4);
        }
        tmaiorigualNode5 = (TMaiorigual)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexplogicaNode1 = new AMaiorouigualExpLogica(pexpNode2, tmaiorigualNode5, psomamenosNode6);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AMaiorouigual$Naologica1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMaiorigual tmaiorigualNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpnLogica pexpnlogicaNode3;
        pexpnlogicaNode3 = (PExpnLogica)nodeArrayList1.get(0);

        pexpNode2 = new ANaologicaExp(pexpnlogicaNode3);
        }
        tmaiorigualNode4 = (TMaiorigual)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMaiorouigualExpLogica(pexpNode2, tmaiorigualNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AMenorouigual$Expressoes1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMenorigual tmenorigualNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PSomaMenos psomamenosNode3;
        psomamenosNode3 = (PSomaMenos)nodeArrayList1.get(0);

        pexpNode2 = new AExpressoesExp(psomamenosNode3);
        }
        tmenorigualNode4 = (TMenorigual)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMenorouigualExpLogica(pexpNode2, tmenorigualNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AMenorouigual$1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMenorigual tmenorigualNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpLogica pexplogicaNode3;
        pexplogicaNode3 = (PExpLogica)nodeArrayList1.get(0);

        pexpNode2 = new AExp(pexplogicaNode3);
        }
        tmenorigualNode4 = (TMenorigual)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMenorouigualExpLogica(pexpNode2, tmenorigualNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AMenorouigual$M1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMenorigual tmenorigualNode5;
        PSomaMenos psomamenosNode6;
        {
            // Block
        TMenos tmenosNode3;
        PSomaMenos psomamenosNode4;
        tmenosNode3 = (TMenos)nodeArrayList1.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode2 = new AMExp(tmenosNode3, psomamenosNode4);
        }
        tmenorigualNode5 = (TMenorigual)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexplogicaNode1 = new AMenorouigualExpLogica(pexpNode2, tmenorigualNode5, psomamenosNode6);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AMenorouigual$Naologica1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TMenorigual tmenorigualNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpnLogica pexpnlogicaNode3;
        pexpnlogicaNode3 = (PExpnLogica)nodeArrayList1.get(0);

        pexpNode2 = new ANaologicaExp(pexpnlogicaNode3);
        }
        tmenorigualNode4 = (TMenorigual)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMenorouigualExpLogica(pexpNode2, tmenorigualNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ADiferente$Expressoes1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TDiferente tdiferenteNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PSomaMenos psomamenosNode3;
        psomamenosNode3 = (PSomaMenos)nodeArrayList1.get(0);

        pexpNode2 = new AExpressoesExp(psomamenosNode3);
        }
        tdiferenteNode4 = (TDiferente)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new ADiferenteExpLogica(pexpNode2, tdiferenteNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce ADiferente$1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TDiferente tdiferenteNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpLogica pexplogicaNode3;
        pexplogicaNode3 = (PExpLogica)nodeArrayList1.get(0);

        pexpNode2 = new AExp(pexplogicaNode3);
        }
        tdiferenteNode4 = (TDiferente)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new ADiferenteExpLogica(pexpNode2, tdiferenteNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce ADiferente$M1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TDiferente tdiferenteNode5;
        PSomaMenos psomamenosNode6;
        {
            // Block
        TMenos tmenosNode3;
        PSomaMenos psomamenosNode4;
        tmenosNode3 = (TMenos)nodeArrayList1.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode2 = new AMExp(tmenosNode3, psomamenosNode4);
        }
        tdiferenteNode5 = (TDiferente)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexplogicaNode1 = new ADiferenteExpLogica(pexpNode2, tdiferenteNode5, psomamenosNode6);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ADiferente$Naologica1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TDiferente tdiferenteNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpnLogica pexpnlogicaNode3;
        pexpnlogicaNode3 = (PExpnLogica)nodeArrayList1.get(0);

        pexpNode2 = new ANaologicaExp(pexpnlogicaNode3);
        }
        tdiferenteNode4 = (TDiferente)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new ADiferenteExpLogica(pexpNode2, tdiferenteNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AUniao$Expressoes1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TE teNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PSomaMenos psomamenosNode3;
        psomamenosNode3 = (PSomaMenos)nodeArrayList1.get(0);

        pexpNode2 = new AExpressoesExp(psomamenosNode3);
        }
        teNode4 = (TE)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AUniaoExpLogica(pexpNode2, teNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AUniao$1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TE teNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpLogica pexplogicaNode3;
        pexplogicaNode3 = (PExpLogica)nodeArrayList1.get(0);

        pexpNode2 = new AExp(pexplogicaNode3);
        }
        teNode4 = (TE)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AUniaoExpLogica(pexpNode2, teNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AUniao$M1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TE teNode5;
        PSomaMenos psomamenosNode6;
        {
            // Block
        TMenos tmenosNode3;
        PSomaMenos psomamenosNode4;
        tmenosNode3 = (TMenos)nodeArrayList1.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode2 = new AMExp(tmenosNode3, psomamenosNode4);
        }
        teNode5 = (TE)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexplogicaNode1 = new AUniaoExpLogica(pexpNode2, teNode5, psomamenosNode6);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AUniao$Naologica1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TE teNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpnLogica pexpnlogicaNode3;
        pexpnlogicaNode3 = (PExpnLogica)nodeArrayList1.get(0);

        pexpNode2 = new ANaologicaExp(pexpnlogicaNode3);
        }
        teNode4 = (TE)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AUniaoExpLogica(pexpNode2, teNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AO$Expressoes1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TOu touNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PSomaMenos psomamenosNode3;
        psomamenosNode3 = (PSomaMenos)nodeArrayList1.get(0);

        pexpNode2 = new AExpressoesExp(psomamenosNode3);
        }
        touNode4 = (TOu)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AOExpLogica(pexpNode2, touNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AO$1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TOu touNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpLogica pexplogicaNode3;
        pexplogicaNode3 = (PExpLogica)nodeArrayList1.get(0);

        pexpNode2 = new AExp(pexplogicaNode3);
        }
        touNode4 = (TOu)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AOExpLogica(pexpNode2, touNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AO$M1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TOu touNode5;
        PSomaMenos psomamenosNode6;
        {
            // Block
        TMenos tmenosNode3;
        PSomaMenos psomamenosNode4;
        tmenosNode3 = (TMenos)nodeArrayList1.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode2 = new AMExp(tmenosNode3, psomamenosNode4);
        }
        touNode5 = (TOu)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexplogicaNode1 = new AOExpLogica(pexpNode2, touNode5, psomamenosNode6);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AO$Naologica1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TOu touNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpnLogica pexpnlogicaNode3;
        pexpnlogicaNode3 = (PExpnLogica)nodeArrayList1.get(0);

        pexpNode2 = new ANaologicaExp(pexpnlogicaNode3);
        }
        touNode4 = (TOu)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AOExpLogica(pexpNode2, touNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AXorr$Expressoes1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TXor txorNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PSomaMenos psomamenosNode3;
        psomamenosNode3 = (PSomaMenos)nodeArrayList1.get(0);

        pexpNode2 = new AExpressoesExp(psomamenosNode3);
        }
        txorNode4 = (TXor)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AXorrExpLogica(pexpNode2, txorNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AXorr$1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TXor txorNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpLogica pexplogicaNode3;
        pexplogicaNode3 = (PExpLogica)nodeArrayList1.get(0);

        pexpNode2 = new AExp(pexplogicaNode3);
        }
        txorNode4 = (TXor)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AXorrExpLogica(pexpNode2, txorNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AXorr$M1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TXor txorNode5;
        PSomaMenos psomamenosNode6;
        {
            // Block
        TMenos tmenosNode3;
        PSomaMenos psomamenosNode4;
        tmenosNode3 = (TMenos)nodeArrayList1.get(0);
        psomamenosNode4 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode2 = new AMExp(tmenosNode3, psomamenosNode4);
        }
        txorNode5 = (TXor)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexplogicaNode1 = new AXorrExpLogica(pexpNode2, txorNode5, psomamenosNode6);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AXorr$Naologica1ExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        TXor txorNode4;
        PSomaMenos psomamenosNode5;
        {
            // Block
        PExpnLogica pexpnlogicaNode3;
        pexpnlogicaNode3 = (PExpnLogica)nodeArrayList1.get(0);

        pexpNode2 = new ANaologicaExp(pexpnlogicaNode3);
        }
        txorNode4 = (TXor)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexplogicaNode1 = new AXorrExpLogica(pexpNode2, txorNode4, psomamenosNode5);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AMaisSomaMenos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaMenos psomamenosNode1;
        {
            // Block
        PSomaMenos psomamenosNode2;
        TMais tmaisNode3;
        PTermo ptermoNode4;
        psomamenosNode2 = (PSomaMenos)nodeArrayList1.get(0);
        tmaisNode3 = (TMais)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        psomamenosNode1 = new AMaisSomaMenos(psomamenosNode2, tmaisNode3, ptermoNode4);
        }
	nodeList.add(psomamenosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AMenosSomaMenos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaMenos psomamenosNode1;
        {
            // Block
        PSomaMenos psomamenosNode2;
        TMenos tmenosNode3;
        PTermo ptermoNode4;
        psomamenosNode2 = (PSomaMenos)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        psomamenosNode1 = new AMenosSomaMenos(psomamenosNode2, tmenosNode3, ptermoNode4);
        }
	nodeList.add(psomamenosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce ASomaMenos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaMenos psomamenosNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        psomamenosNode1 = new ASomaMenos(ptermoNode2);
        }
	nodeList.add(psomamenosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AMultiplicacaoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        TMult tmultNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new AMultiplicacaoTermo(ptermoNode2, tmultNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce ATermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new ATermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ANumerointFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TNInt tnintNode2;
        tnintNode2 = (TNInt)nodeArrayList1.get(0);

        pfatorNode1 = new ANumerointFator(tnintNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AIdFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pfatorNode1 = new AIdFator(tidentificadorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AExp$Expressoes1Fator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TEsqParen tesqparenNode2;
        PExp pexpNode3;
        TDirParen tdirparenNode5;
        tesqparenNode2 = (TEsqParen)nodeArrayList1.get(0);
        {
            // Block
        PSomaMenos psomamenosNode4;
        psomamenosNode4 = (PSomaMenos)nodeArrayList2.get(0);

        pexpNode3 = new AExpressoesExp(psomamenosNode4);
        }
        tdirparenNode5 = (TDirParen)nodeArrayList3.get(0);

        pfatorNode1 = new AExpFator(tesqparenNode2, pexpNode3, tdirparenNode5);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AExp$1Fator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TEsqParen tesqparenNode2;
        PExp pexpNode3;
        TDirParen tdirparenNode5;
        tesqparenNode2 = (TEsqParen)nodeArrayList1.get(0);
        {
            // Block
        PExpLogica pexplogicaNode4;
        pexplogicaNode4 = (PExpLogica)nodeArrayList2.get(0);

        pexpNode3 = new AExp(pexplogicaNode4);
        }
        tdirparenNode5 = (TDirParen)nodeArrayList3.get(0);

        pfatorNode1 = new AExpFator(tesqparenNode2, pexpNode3, tdirparenNode5);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AExp$M1Fator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TEsqParen tesqparenNode2;
        PExp pexpNode3;
        TDirParen tdirparenNode6;
        tesqparenNode2 = (TEsqParen)nodeArrayList1.get(0);
        {
            // Block
        TMenos tmenosNode4;
        PSomaMenos psomamenosNode5;
        tmenosNode4 = (TMenos)nodeArrayList2.get(0);
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexpNode3 = new AMExp(tmenosNode4, psomamenosNode5);
        }
        tdirparenNode6 = (TDirParen)nodeArrayList4.get(0);

        pfatorNode1 = new AExpFator(tesqparenNode2, pexpNode3, tdirparenNode6);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AExp$Naologica1Fator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TEsqParen tesqparenNode2;
        PExp pexpNode3;
        TDirParen tdirparenNode5;
        tesqparenNode2 = (TEsqParen)nodeArrayList1.get(0);
        {
            // Block
        PExpnLogica pexpnlogicaNode4;
        pexpnlogicaNode4 = (PExpnLogica)nodeArrayList2.get(0);

        pexpNode3 = new ANaologicaExp(pexpnlogicaNode4);
        }
        tdirparenNode5 = (TDirParen)nodeArrayList3.get(0);

        pfatorNode1 = new AExpFator(tesqparenNode2, pexpNode3, tdirparenNode5);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AStrFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pfatorNode1 = new AStrFator(tstringNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ALeiaConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoLeia pcomandoleiaNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoleiaNode3 = (PComandoLeia)nodeArrayList2.get(0);

        pconjcomandosNode1 = new ALeiaConjComandos(pconjcomandosNode2, pcomandoleiaNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AEscrevaConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoEscreva pcomandoescrevaNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoescrevaNode3 = (PComandoEscreva)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AEscrevaConjComandos(pconjcomandosNode2, pcomandoescrevaNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AAtribuiConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoAtribuicao pcomandoatribuicaoNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoatribuicaoNode3 = (PComandoAtribuicao)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AAtribuiConjComandos(pconjcomandosNode2, pcomandoatribuicaoNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ACondicionalConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoSe pcomandoseNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoseNode3 = (PComandoSe)nodeArrayList2.get(0);

        pconjcomandosNode1 = new ACondicionalConjComandos(pconjcomandosNode2, pcomandoseNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AEnquantoConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoEnquanto pcomandoenquantoNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoenquantoNode3 = (PComandoEnquanto)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AEnquantoConjComandos(pconjcomandosNode2, pcomandoenquantoNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ARepitaConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoRepita pcomandorepitaNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandorepitaNode3 = (PComandoRepita)nodeArrayList2.get(0);

        pconjcomandosNode1 = new ARepitaConjComandos(pconjcomandosNode2, pcomandorepitaNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AFacaConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoPara pcomandoparaNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoparaNode3 = (PComandoPara)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AFacaConjComandos(pconjcomandosNode2, pcomandoparaNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AFacaPassoConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoParaPasso pcomandoparapassoNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoparapassoNode3 = (PComandoParaPasso)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AFacaPassoConjComandos(pconjcomandosNode2, pcomandoparapassoNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConjComandos pconjcomandosNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        PComandoAvalie pcomandoavalieNode3;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);
        pcomandoavalieNode3 = (PComandoAvalie)nodeArrayList2.get(0);

        pconjcomandosNode1 = new AConjComandos(pconjcomandosNode2, pcomandoavalieNode3);
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AVazioConjComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PConjComandos pconjcomandosNode1;
        {
            // Block

        pconjcomandosNode1 = new AVazioConjComandos();
        }
	nodeList.add(pconjcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AComandoLeia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoLeia pcomandoleiaNode1;
        {
            // Block
        TLeia tleiaNode2;
        TEsqParen tesqparenNode3;
        PVarDef pvardefNode4;
        TDirParen tdirparenNode5;
        TPontoevirgula tpontoevirgulaNode6;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        pvardefNode4 = (PVarDef)nodeArrayList3.get(0);
        tdirparenNode5 = (TDirParen)nodeArrayList4.get(0);
        tpontoevirgulaNode6 = (TPontoevirgula)nodeArrayList5.get(0);

        pcomandoleiaNode1 = new AComandoLeia(tleiaNode2, tesqparenNode3, pvardefNode4, tdirparenNode5, tpontoevirgulaNode6);
        }
	nodeList.add(pcomandoleiaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce AExpressoes1ComandoEscreva */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEscreva pcomandoescrevaNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode6;
        TPontoevirgula tpontoevirgulaNode7;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        PSomaMenos psomamenosNode5;
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexpNode4 = new AExpressoesExp(psomamenosNode5);
        }
        tdirparenNode6 = (TDirParen)nodeArrayList4.get(0);
        tpontoevirgulaNode7 = (TPontoevirgula)nodeArrayList5.get(0);

        pcomandoescrevaNode1 = new AComandoEscreva(tescrevaNode2, tesqparenNode3, pexpNode4, tdirparenNode6, tpontoevirgulaNode7);
        }
	nodeList.add(pcomandoescrevaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce A1ComandoEscreva */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEscreva pcomandoescrevaNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode6;
        TPontoevirgula tpontoevirgulaNode7;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        PExpLogica pexplogicaNode5;
        pexplogicaNode5 = (PExpLogica)nodeArrayList3.get(0);

        pexpNode4 = new AExp(pexplogicaNode5);
        }
        tdirparenNode6 = (TDirParen)nodeArrayList4.get(0);
        tpontoevirgulaNode7 = (TPontoevirgula)nodeArrayList5.get(0);

        pcomandoescrevaNode1 = new AComandoEscreva(tescrevaNode2, tesqparenNode3, pexpNode4, tdirparenNode6, tpontoevirgulaNode7);
        }
	nodeList.add(pcomandoescrevaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AM1ComandoEscreva */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEscreva pcomandoescrevaNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode7;
        TPontoevirgula tpontoevirgulaNode8;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        TMenos tmenosNode5;
        PSomaMenos psomamenosNode6;
        tmenosNode5 = (TMenos)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexpNode4 = new AMExp(tmenosNode5, psomamenosNode6);
        }
        tdirparenNode7 = (TDirParen)nodeArrayList5.get(0);
        tpontoevirgulaNode8 = (TPontoevirgula)nodeArrayList6.get(0);

        pcomandoescrevaNode1 = new AComandoEscreva(tescrevaNode2, tesqparenNode3, pexpNode4, tdirparenNode7, tpontoevirgulaNode8);
        }
	nodeList.add(pcomandoescrevaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce ANaologica1ComandoEscreva */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEscreva pcomandoescrevaNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode6;
        TPontoevirgula tpontoevirgulaNode7;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        PExpnLogica pexpnlogicaNode5;
        pexpnlogicaNode5 = (PExpnLogica)nodeArrayList3.get(0);

        pexpNode4 = new ANaologicaExp(pexpnlogicaNode5);
        }
        tdirparenNode6 = (TDirParen)nodeArrayList4.get(0);
        tpontoevirgulaNode7 = (TPontoevirgula)nodeArrayList5.get(0);

        pcomandoescrevaNode1 = new AComandoEscreva(tescrevaNode2, tesqparenNode3, pexpNode4, tdirparenNode6, tpontoevirgulaNode7);
        }
	nodeList.add(pcomandoescrevaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AExpressoes1ComandoAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAtribuicao pcomandoatribuicaoNode1;
        {
            // Block
        PVarDef pvardefNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoevirgula tpontoevirgulaNode6;
        pvardefNode2 = (PVarDef)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        {
            // Block
        PSomaMenos psomamenosNode5;
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexpNode4 = new AExpressoesExp(psomamenosNode5);
        }
        tpontoevirgulaNode6 = (TPontoevirgula)nodeArrayList4.get(0);

        pcomandoatribuicaoNode1 = new AComandoAtribuicao(pvardefNode2, tatribuicaoNode3, pexpNode4, tpontoevirgulaNode6);
        }
	nodeList.add(pcomandoatribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce A1ComandoAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAtribuicao pcomandoatribuicaoNode1;
        {
            // Block
        PVarDef pvardefNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoevirgula tpontoevirgulaNode6;
        pvardefNode2 = (PVarDef)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        {
            // Block
        PExpLogica pexplogicaNode5;
        pexplogicaNode5 = (PExpLogica)nodeArrayList3.get(0);

        pexpNode4 = new AExp(pexplogicaNode5);
        }
        tpontoevirgulaNode6 = (TPontoevirgula)nodeArrayList4.get(0);

        pcomandoatribuicaoNode1 = new AComandoAtribuicao(pvardefNode2, tatribuicaoNode3, pexpNode4, tpontoevirgulaNode6);
        }
	nodeList.add(pcomandoatribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AM1ComandoAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAtribuicao pcomandoatribuicaoNode1;
        {
            // Block
        PVarDef pvardefNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoevirgula tpontoevirgulaNode7;
        pvardefNode2 = (PVarDef)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        {
            // Block
        TMenos tmenosNode5;
        PSomaMenos psomamenosNode6;
        tmenosNode5 = (TMenos)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexpNode4 = new AMExp(tmenosNode5, psomamenosNode6);
        }
        tpontoevirgulaNode7 = (TPontoevirgula)nodeArrayList5.get(0);

        pcomandoatribuicaoNode1 = new AComandoAtribuicao(pvardefNode2, tatribuicaoNode3, pexpNode4, tpontoevirgulaNode7);
        }
	nodeList.add(pcomandoatribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce ANaologica1ComandoAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAtribuicao pcomandoatribuicaoNode1;
        {
            // Block
        PVarDef pvardefNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoevirgula tpontoevirgulaNode6;
        pvardefNode2 = (PVarDef)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        {
            // Block
        PExpnLogica pexpnlogicaNode5;
        pexpnlogicaNode5 = (PExpnLogica)nodeArrayList3.get(0);

        pexpNode4 = new ANaologicaExp(pexpnlogicaNode5);
        }
        tpontoevirgulaNode6 = (TPontoevirgula)nodeArrayList4.get(0);

        pcomandoatribuicaoNode1 = new AComandoAtribuicao(pvardefNode2, tatribuicaoNode3, pexpNode4, tpontoevirgulaNode6);
        }
	nodeList.add(pcomandoatribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ASimplesComandoSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSe pcomandoseNode1;
        {
            // Block
        TSe tseNode2;
        TEsqParen tesqparenNode3;
        PExpLogica pexplogicaNode4;
        TDirParen tdirparenNode5;
        TEntao tentaoNode6;
        PConjComandos pconjcomandosNode7;
        TFimSe tfimseNode8;
        TPontoevirgula tpontoevirgulaNode9;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tdirparenNode5 = (TDirParen)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pconjcomandosNode7 = (PConjComandos)nodeArrayList6.get(0);
        tfimseNode8 = (TFimSe)nodeArrayList7.get(0);
        tpontoevirgulaNode9 = (TPontoevirgula)nodeArrayList8.get(0);

        pcomandoseNode1 = new ASimplesComandoSe(tseNode2, tesqparenNode3, pexplogicaNode4, tdirparenNode5, tentaoNode6, pconjcomandosNode7, tfimseNode8, tpontoevirgulaNode9);
        }
	nodeList.add(pcomandoseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce ACompleto$Expressoes1ComandoSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSe pcomandoseNode1;
        {
            // Block
        TSe tseNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode6;
        TEntao tentaoNode7;
        PConjComandos pconjcomandosNode8;
        TSenao tsenaoNode9;
        PDSenao pdsenaoNode10;
        TFimSe tfimseNode11;
        TPontoevirgula tpontoevirgulaNode12;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        PSomaMenos psomamenosNode5;
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexpNode4 = new AExpressoesExp(psomamenosNode5);
        }
        tdirparenNode6 = (TDirParen)nodeArrayList4.get(0);
        tentaoNode7 = (TEntao)nodeArrayList5.get(0);
        pconjcomandosNode8 = (PConjComandos)nodeArrayList6.get(0);
        tsenaoNode9 = (TSenao)nodeArrayList7.get(0);
        pdsenaoNode10 = (PDSenao)nodeArrayList8.get(0);
        tfimseNode11 = (TFimSe)nodeArrayList9.get(0);
        tpontoevirgulaNode12 = (TPontoevirgula)nodeArrayList10.get(0);

        pcomandoseNode1 = new ACompletoComandoSe(tseNode2, tesqparenNode3, pexpNode4, tdirparenNode6, tentaoNode7, pconjcomandosNode8, tsenaoNode9, pdsenaoNode10, tfimseNode11, tpontoevirgulaNode12);
        }
	nodeList.add(pcomandoseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce ACompleto$1ComandoSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSe pcomandoseNode1;
        {
            // Block
        TSe tseNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode6;
        TEntao tentaoNode7;
        PConjComandos pconjcomandosNode8;
        TSenao tsenaoNode9;
        PDSenao pdsenaoNode10;
        TFimSe tfimseNode11;
        TPontoevirgula tpontoevirgulaNode12;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        PExpLogica pexplogicaNode5;
        pexplogicaNode5 = (PExpLogica)nodeArrayList3.get(0);

        pexpNode4 = new AExp(pexplogicaNode5);
        }
        tdirparenNode6 = (TDirParen)nodeArrayList4.get(0);
        tentaoNode7 = (TEntao)nodeArrayList5.get(0);
        pconjcomandosNode8 = (PConjComandos)nodeArrayList6.get(0);
        tsenaoNode9 = (TSenao)nodeArrayList7.get(0);
        pdsenaoNode10 = (PDSenao)nodeArrayList8.get(0);
        tfimseNode11 = (TFimSe)nodeArrayList9.get(0);
        tpontoevirgulaNode12 = (TPontoevirgula)nodeArrayList10.get(0);

        pcomandoseNode1 = new ACompletoComandoSe(tseNode2, tesqparenNode3, pexpNode4, tdirparenNode6, tentaoNode7, pconjcomandosNode8, tsenaoNode9, pdsenaoNode10, tfimseNode11, tpontoevirgulaNode12);
        }
	nodeList.add(pcomandoseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce ACompleto$M1ComandoSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSe pcomandoseNode1;
        {
            // Block
        TSe tseNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode7;
        TEntao tentaoNode8;
        PConjComandos pconjcomandosNode9;
        TSenao tsenaoNode10;
        PDSenao pdsenaoNode11;
        TFimSe tfimseNode12;
        TPontoevirgula tpontoevirgulaNode13;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        TMenos tmenosNode5;
        PSomaMenos psomamenosNode6;
        tmenosNode5 = (TMenos)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexpNode4 = new AMExp(tmenosNode5, psomamenosNode6);
        }
        tdirparenNode7 = (TDirParen)nodeArrayList5.get(0);
        tentaoNode8 = (TEntao)nodeArrayList6.get(0);
        pconjcomandosNode9 = (PConjComandos)nodeArrayList7.get(0);
        tsenaoNode10 = (TSenao)nodeArrayList8.get(0);
        pdsenaoNode11 = (PDSenao)nodeArrayList9.get(0);
        tfimseNode12 = (TFimSe)nodeArrayList10.get(0);
        tpontoevirgulaNode13 = (TPontoevirgula)nodeArrayList11.get(0);

        pcomandoseNode1 = new ACompletoComandoSe(tseNode2, tesqparenNode3, pexpNode4, tdirparenNode7, tentaoNode8, pconjcomandosNode9, tsenaoNode10, pdsenaoNode11, tfimseNode12, tpontoevirgulaNode13);
        }
	nodeList.add(pcomandoseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce ACompleto$Naologica1ComandoSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSe pcomandoseNode1;
        {
            // Block
        TSe tseNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode6;
        TEntao tentaoNode7;
        PConjComandos pconjcomandosNode8;
        TSenao tsenaoNode9;
        PDSenao pdsenaoNode10;
        TFimSe tfimseNode11;
        TPontoevirgula tpontoevirgulaNode12;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        PExpnLogica pexpnlogicaNode5;
        pexpnlogicaNode5 = (PExpnLogica)nodeArrayList3.get(0);

        pexpNode4 = new ANaologicaExp(pexpnlogicaNode5);
        }
        tdirparenNode6 = (TDirParen)nodeArrayList4.get(0);
        tentaoNode7 = (TEntao)nodeArrayList5.get(0);
        pconjcomandosNode8 = (PConjComandos)nodeArrayList6.get(0);
        tsenaoNode9 = (TSenao)nodeArrayList7.get(0);
        pdsenaoNode10 = (PDSenao)nodeArrayList8.get(0);
        tfimseNode11 = (TFimSe)nodeArrayList9.get(0);
        tpontoevirgulaNode12 = (TPontoevirgula)nodeArrayList10.get(0);

        pcomandoseNode1 = new ACompletoComandoSe(tseNode2, tesqparenNode3, pexpNode4, tdirparenNode6, tentaoNode7, pconjcomandosNode8, tsenaoNode9, pdsenaoNode10, tfimseNode11, tpontoevirgulaNode12);
        }
	nodeList.add(pcomandoseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce ADSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDSenao pdsenaoNode1;
        {
            // Block
        PConjComandos pconjcomandosNode2;
        pconjcomandosNode2 = (PConjComandos)nodeArrayList1.get(0);

        pdsenaoNode1 = new ADSenao(pconjcomandosNode2);
        }
	nodeList.add(pdsenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce AEnquantoComandoEnquanto */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEnquanto pcomandoenquantoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TEsqParen tesqparenNode3;
        PExpLogica pexplogicaNode4;
        TDirParen tdirparenNode5;
        TFaca tfacaNode6;
        PConjComandos pconjcomandosNode7;
        TFimEnquanto tfimenquantoNode8;
        TPontoevirgula tpontoevirgulaNode9;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tdirparenNode5 = (TDirParen)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        pconjcomandosNode7 = (PConjComandos)nodeArrayList6.get(0);
        tfimenquantoNode8 = (TFimEnquanto)nodeArrayList7.get(0);
        tpontoevirgulaNode9 = (TPontoevirgula)nodeArrayList8.get(0);

        pcomandoenquantoNode1 = new AEnquantoComandoEnquanto(tenquantoNode2, tesqparenNode3, pexplogicaNode4, tdirparenNode5, tfacaNode6, pconjcomandosNode7, tfimenquantoNode8, tpontoevirgulaNode9);
        }
	nodeList.add(pcomandoenquantoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce ARepitaComandoRepita */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoRepita pcomandorepitaNode1;
        {
            // Block
        TRepita trepitaNode2;
        PConjComandos pconjcomandosNode3;
        TAte tateNode4;
        TEsqParen tesqparenNode5;
        PExpLogica pexplogicaNode6;
        TDirParen tdirparenNode7;
        TPontoevirgula tpontoevirgulaNode8;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        pconjcomandosNode3 = (PConjComandos)nodeArrayList2.get(0);
        tateNode4 = (TAte)nodeArrayList3.get(0);
        tesqparenNode5 = (TEsqParen)nodeArrayList4.get(0);
        pexplogicaNode6 = (PExpLogica)nodeArrayList5.get(0);
        tdirparenNode7 = (TDirParen)nodeArrayList6.get(0);
        tpontoevirgulaNode8 = (TPontoevirgula)nodeArrayList7.get(0);

        pcomandorepitaNode1 = new ARepitaComandoRepita(trepitaNode2, pconjcomandosNode3, tateNode4, tesqparenNode5, pexplogicaNode6, tdirparenNode7, tpontoevirgulaNode8);
        }
	nodeList.add(pcomandorepitaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce AParaComandoPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoPara pcomandoparaNode1;
        {
            // Block
        TPara tparaNode2;
        PVarDef pvardefNode3;
        TDe tdeNode4;
        TNInt tnintNode5;
        TAte tateNode6;
        PComplementoPara pcomplementoparaNode7;
        TFaca tfacaNode8;
        PConjComandos pconjcomandosNode9;
        TFimPara tfimparaNode10;
        TPontoevirgula tpontoevirgulaNode11;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvardefNode3 = (PVarDef)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnintNode5 = (TNInt)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        pcomplementoparaNode7 = (PComplementoPara)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        pconjcomandosNode9 = (PConjComandos)nodeArrayList8.get(0);
        tfimparaNode10 = (TFimPara)nodeArrayList9.get(0);
        tpontoevirgulaNode11 = (TPontoevirgula)nodeArrayList10.get(0);

        pcomandoparaNode1 = new AParaComandoPara(tparaNode2, pvardefNode3, tdeNode4, tnintNode5, tateNode6, pcomplementoparaNode7, tfacaNode8, pconjcomandosNode9, tfimparaNode10, tpontoevirgulaNode11);
        }
	nodeList.add(pcomandoparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce AComplementoPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComplementoPara pcomplementoparaNode1;
        {
            // Block
        TNInt tnintNode2;
        tnintNode2 = (TNInt)nodeArrayList1.get(0);

        pcomplementoparaNode1 = new AComplementoPara(tnintNode2);
        }
	nodeList.add(pcomplementoparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce AComandoParaPasso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoParaPasso pcomandoparapassoNode1;
        {
            // Block
        TPara tparaNode2;
        PVarDef pvardefNode3;
        TDe tdeNode4;
        TNInt tnintNode5;
        TPasso tpassoNode6;
        PComplementoPara2 pcomplementopara2Node7;
        TAte tateNode8;
        PComplementoPara pcomplementoparaNode9;
        TFaca tfacaNode10;
        PConjComandos pconjcomandosNode11;
        TFimPara tfimparaNode12;
        TPontoevirgula tpontoevirgulaNode13;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvardefNode3 = (PVarDef)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnintNode5 = (TNInt)nodeArrayList4.get(0);
        tpassoNode6 = (TPasso)nodeArrayList5.get(0);
        pcomplementopara2Node7 = (PComplementoPara2)nodeArrayList6.get(0);
        tateNode8 = (TAte)nodeArrayList7.get(0);
        pcomplementoparaNode9 = (PComplementoPara)nodeArrayList8.get(0);
        tfacaNode10 = (TFaca)nodeArrayList9.get(0);
        pconjcomandosNode11 = (PConjComandos)nodeArrayList10.get(0);
        tfimparaNode12 = (TFimPara)nodeArrayList11.get(0);
        tpontoevirgulaNode13 = (TPontoevirgula)nodeArrayList12.get(0);

        pcomandoparapassoNode1 = new AComandoParaPasso(tparaNode2, pvardefNode3, tdeNode4, tnintNode5, tpassoNode6, pcomplementopara2Node7, tateNode8, pcomplementoparaNode9, tfacaNode10, pconjcomandosNode11, tfimparaNode12, tpontoevirgulaNode13);
        }
	nodeList.add(pcomandoparapassoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce AComplementoPara2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComplementoPara2 pcomplementopara2Node1;
        {
            // Block
        TNInt tnintNode2;
        tnintNode2 = (TNInt)nodeArrayList1.get(0);

        pcomplementopara2Node1 = new AComplementoPara2(tnintNode2);
        }
	nodeList.add(pcomplementopara2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce AAvalie$Expressoes1ComandoAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAvalie pcomandoavalieNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode6;
        TCaso tcasoNode7;
        PValor pvalorNode8;
        TDoispontos tdoispontosNode9;
        PConjComandos pconjcomandosNode10;
        PSenaoAvalie psenaoavalieNode11;
        TFimAvalie tfimavalieNode12;
        TPontoevirgula tpontoevirgulaNode13;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        PSomaMenos psomamenosNode5;
        psomamenosNode5 = (PSomaMenos)nodeArrayList3.get(0);

        pexpNode4 = new AExpressoesExp(psomamenosNode5);
        }
        tdirparenNode6 = (TDirParen)nodeArrayList4.get(0);
        tcasoNode7 = (TCaso)nodeArrayList5.get(0);
        pvalorNode8 = (PValor)nodeArrayList6.get(0);
        tdoispontosNode9 = (TDoispontos)nodeArrayList7.get(0);
        pconjcomandosNode10 = (PConjComandos)nodeArrayList8.get(0);
        psenaoavalieNode11 = (PSenaoAvalie)nodeArrayList9.get(0);
        tfimavalieNode12 = (TFimAvalie)nodeArrayList10.get(0);
        tpontoevirgulaNode13 = (TPontoevirgula)nodeArrayList11.get(0);

        pcomandoavalieNode1 = new AAvalieComandoAvalie(tavalieNode2, tesqparenNode3, pexpNode4, tdirparenNode6, tcasoNode7, pvalorNode8, tdoispontosNode9, pconjcomandosNode10, psenaoavalieNode11, tfimavalieNode12, tpontoevirgulaNode13);
        }
	nodeList.add(pcomandoavalieNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce AAvalie$1ComandoAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAvalie pcomandoavalieNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode6;
        TCaso tcasoNode7;
        PValor pvalorNode8;
        TDoispontos tdoispontosNode9;
        PConjComandos pconjcomandosNode10;
        PSenaoAvalie psenaoavalieNode11;
        TFimAvalie tfimavalieNode12;
        TPontoevirgula tpontoevirgulaNode13;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        PExpLogica pexplogicaNode5;
        pexplogicaNode5 = (PExpLogica)nodeArrayList3.get(0);

        pexpNode4 = new AExp(pexplogicaNode5);
        }
        tdirparenNode6 = (TDirParen)nodeArrayList4.get(0);
        tcasoNode7 = (TCaso)nodeArrayList5.get(0);
        pvalorNode8 = (PValor)nodeArrayList6.get(0);
        tdoispontosNode9 = (TDoispontos)nodeArrayList7.get(0);
        pconjcomandosNode10 = (PConjComandos)nodeArrayList8.get(0);
        psenaoavalieNode11 = (PSenaoAvalie)nodeArrayList9.get(0);
        tfimavalieNode12 = (TFimAvalie)nodeArrayList10.get(0);
        tpontoevirgulaNode13 = (TPontoevirgula)nodeArrayList11.get(0);

        pcomandoavalieNode1 = new AAvalieComandoAvalie(tavalieNode2, tesqparenNode3, pexpNode4, tdirparenNode6, tcasoNode7, pvalorNode8, tdoispontosNode9, pconjcomandosNode10, psenaoavalieNode11, tfimavalieNode12, tpontoevirgulaNode13);
        }
	nodeList.add(pcomandoavalieNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce AAvalie$M1ComandoAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAvalie pcomandoavalieNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode7;
        TCaso tcasoNode8;
        PValor pvalorNode9;
        TDoispontos tdoispontosNode10;
        PConjComandos pconjcomandosNode11;
        PSenaoAvalie psenaoavalieNode12;
        TFimAvalie tfimavalieNode13;
        TPontoevirgula tpontoevirgulaNode14;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        TMenos tmenosNode5;
        PSomaMenos psomamenosNode6;
        tmenosNode5 = (TMenos)nodeArrayList3.get(0);
        psomamenosNode6 = (PSomaMenos)nodeArrayList4.get(0);

        pexpNode4 = new AMExp(tmenosNode5, psomamenosNode6);
        }
        tdirparenNode7 = (TDirParen)nodeArrayList5.get(0);
        tcasoNode8 = (TCaso)nodeArrayList6.get(0);
        pvalorNode9 = (PValor)nodeArrayList7.get(0);
        tdoispontosNode10 = (TDoispontos)nodeArrayList8.get(0);
        pconjcomandosNode11 = (PConjComandos)nodeArrayList9.get(0);
        psenaoavalieNode12 = (PSenaoAvalie)nodeArrayList10.get(0);
        tfimavalieNode13 = (TFimAvalie)nodeArrayList11.get(0);
        tpontoevirgulaNode14 = (TPontoevirgula)nodeArrayList12.get(0);

        pcomandoavalieNode1 = new AAvalieComandoAvalie(tavalieNode2, tesqparenNode3, pexpNode4, tdirparenNode7, tcasoNode8, pvalorNode9, tdoispontosNode10, pconjcomandosNode11, psenaoavalieNode12, tfimavalieNode13, tpontoevirgulaNode14);
        }
	nodeList.add(pcomandoavalieNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce AAvalie$Naologica1ComandoAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAvalie pcomandoavalieNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TEsqParen tesqparenNode3;
        PExp pexpNode4;
        TDirParen tdirparenNode6;
        TCaso tcasoNode7;
        PValor pvalorNode8;
        TDoispontos tdoispontosNode9;
        PConjComandos pconjcomandosNode10;
        PSenaoAvalie psenaoavalieNode11;
        TFimAvalie tfimavalieNode12;
        TPontoevirgula tpontoevirgulaNode13;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tesqparenNode3 = (TEsqParen)nodeArrayList2.get(0);
        {
            // Block
        PExpnLogica pexpnlogicaNode5;
        pexpnlogicaNode5 = (PExpnLogica)nodeArrayList3.get(0);

        pexpNode4 = new ANaologicaExp(pexpnlogicaNode5);
        }
        tdirparenNode6 = (TDirParen)nodeArrayList4.get(0);
        tcasoNode7 = (TCaso)nodeArrayList5.get(0);
        pvalorNode8 = (PValor)nodeArrayList6.get(0);
        tdoispontosNode9 = (TDoispontos)nodeArrayList7.get(0);
        pconjcomandosNode10 = (PConjComandos)nodeArrayList8.get(0);
        psenaoavalieNode11 = (PSenaoAvalie)nodeArrayList9.get(0);
        tfimavalieNode12 = (TFimAvalie)nodeArrayList10.get(0);
        tpontoevirgulaNode13 = (TPontoevirgula)nodeArrayList11.get(0);

        pcomandoavalieNode1 = new AAvalieComandoAvalie(tavalieNode2, tesqparenNode3, pexpNode4, tdirparenNode6, tcasoNode7, pvalorNode8, tdoispontosNode9, pconjcomandosNode10, psenaoavalieNode11, tfimavalieNode12, tpontoevirgulaNode13);
        }
	nodeList.add(pcomandoavalieNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new100() /* reduce ASenaoAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoAvalie psenaoavalieNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoispontos tdoispontosNode3;
        PConjComandos pconjcomandosNode4;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pconjcomandosNode4 = (PConjComandos)nodeArrayList3.get(0);

        psenaoavalieNode1 = new ASenaoAvalie(tsenaoNode2, tdoispontosNode3, pconjcomandosNode4);
        }
	nodeList.add(psenaoavalieNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new101() /* reduce AVazioSenaoAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PSenaoAvalie psenaoavalieNode1;
        {
            // Block

        psenaoavalieNode1 = new AVazioSenaoAvalie();
        }
	nodeList.add(psenaoavalieNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {3, SHIFT, 1}, },
			{{-1, ERROR, 1}, {52, SHIFT, 3}, },
			{{-1, ERROR, 2}, {58, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {35, SHIFT, 4}, },
			{{-1, ERROR, 4}, {2, SHIFT, 5}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 74}, {6, SHIFT, 7}, {7, SHIFT, 8}, {8, SHIFT, 9}, {9, SHIFT, 10}, },
			{{-1, ERROR, 7}, {52, SHIFT, 14}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 12}, {34, SHIFT, 15}, },
			{{-1, ERROR, 13}, {0, SHIFT, 16}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 14}, {10, SHIFT, 35}, {11, SHIFT, 36}, {12, SHIFT, 37}, },
			{{-1, ERROR, 15}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 17}, {36, SHIFT, 41}, },
			{{-1, ERROR, 18}, {36, SHIFT, 42}, },
			{{-1, ERROR, 19}, {36, SHIFT, 43}, },
			{{-1, ERROR, 20}, {36, SHIFT, 44}, },
			{{-1, ERROR, 21}, {36, SHIFT, 45}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 23}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 8}, {40, SHIFT, 48}, },
			{{-1, ERROR, 25}, {32, SHIFT, 49}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 38}, {35, SHIFT, 50}, },
			{{-1, ERROR, 39}, {52, SHIFT, 24}, },
			{{-1, ERROR, 40}, {33, SHIFT, 52}, {35, SHIFT, 53}, },
			{{-1, ERROR, 41}, {52, SHIFT, 24}, },
			{{-1, ERROR, 42}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 57}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 43}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 66}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 44}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 70}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 45}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 74}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 46}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {24, SHIFT, 78}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 47}, {27, SHIFT, 79}, },
			{{-1, ERROR, 48}, {11, SHIFT, 80}, },
			{{-1, ERROR, 49}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 81}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, REDUCE, 5}, },
			{{-1, ERROR, 51}, {33, SHIFT, 85}, {35, SHIFT, 86}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 54}, {37, SHIFT, 87}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 57}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 58}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 89}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 59}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, REDUCE, 59}, },
			{{-1, ERROR, 61}, {37, SHIFT, 94}, {42, SHIFT, 95}, {43, SHIFT, 96}, {44, SHIFT, 97}, {45, SHIFT, 98}, {46, SHIFT, 99}, {47, SHIFT, 100}, {48, SHIFT, 101}, {49, SHIFT, 102}, {50, SHIFT, 103}, },
			{{-1, ERROR, 62}, {37, SHIFT, 104}, {42, SHIFT, 105}, {43, SHIFT, 106}, {44, SHIFT, 107}, {45, SHIFT, 108}, {46, SHIFT, 109}, {47, SHIFT, 110}, {48, SHIFT, 111}, {49, SHIFT, 112}, {50, SHIFT, 113}, },
			{{-1, ERROR, 63}, {29, SHIFT, 114}, {30, SHIFT, 115}, {37, SHIFT, 116}, {42, SHIFT, 117}, {43, SHIFT, 118}, {44, SHIFT, 119}, {45, SHIFT, 120}, {46, SHIFT, 121}, {47, SHIFT, 122}, {48, SHIFT, 123}, {49, SHIFT, 124}, {50, SHIFT, 125}, },
			{{-1, REDUCE, 55}, {31, SHIFT, 126}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 66}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 67}, {37, SHIFT, 128}, {42, SHIFT, 95}, {43, SHIFT, 96}, {44, SHIFT, 97}, {45, SHIFT, 98}, {46, SHIFT, 99}, {47, SHIFT, 100}, {48, SHIFT, 101}, {49, SHIFT, 102}, {50, SHIFT, 103}, },
			{{-1, ERROR, 68}, {37, SHIFT, 129}, {42, SHIFT, 105}, {43, SHIFT, 106}, {44, SHIFT, 107}, {45, SHIFT, 108}, {46, SHIFT, 109}, {47, SHIFT, 110}, {48, SHIFT, 111}, {49, SHIFT, 112}, {50, SHIFT, 113}, },
			{{-1, ERROR, 69}, {29, SHIFT, 114}, {30, SHIFT, 115}, {37, SHIFT, 130}, {42, SHIFT, 117}, {43, SHIFT, 118}, {44, SHIFT, 119}, {45, SHIFT, 120}, {46, SHIFT, 121}, {47, SHIFT, 122}, {48, SHIFT, 123}, {49, SHIFT, 124}, {50, SHIFT, 125}, },
			{{-1, ERROR, 70}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 71}, {37, SHIFT, 132}, {42, SHIFT, 95}, {43, SHIFT, 96}, {44, SHIFT, 97}, {45, SHIFT, 98}, {46, SHIFT, 99}, {47, SHIFT, 100}, {48, SHIFT, 101}, {49, SHIFT, 102}, {50, SHIFT, 103}, },
			{{-1, ERROR, 72}, {37, SHIFT, 133}, {42, SHIFT, 105}, {43, SHIFT, 106}, {44, SHIFT, 107}, {45, SHIFT, 108}, {46, SHIFT, 109}, {47, SHIFT, 110}, {48, SHIFT, 111}, {49, SHIFT, 112}, {50, SHIFT, 113}, },
			{{-1, ERROR, 73}, {29, SHIFT, 114}, {30, SHIFT, 115}, {37, SHIFT, 134}, {42, SHIFT, 117}, {43, SHIFT, 118}, {44, SHIFT, 119}, {45, SHIFT, 120}, {46, SHIFT, 121}, {47, SHIFT, 122}, {48, SHIFT, 123}, {49, SHIFT, 124}, {50, SHIFT, 125}, },
			{{-1, ERROR, 74}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 75}, {42, SHIFT, 95}, {43, SHIFT, 96}, {44, SHIFT, 97}, {45, SHIFT, 98}, {46, SHIFT, 99}, {47, SHIFT, 100}, {48, SHIFT, 101}, {49, SHIFT, 102}, {50, SHIFT, 103}, },
			{{-1, ERROR, 76}, {37, SHIFT, 136}, {42, SHIFT, 105}, {43, SHIFT, 106}, {44, SHIFT, 107}, {45, SHIFT, 108}, {46, SHIFT, 109}, {47, SHIFT, 110}, {48, SHIFT, 111}, {49, SHIFT, 112}, {50, SHIFT, 113}, },
			{{-1, ERROR, 77}, {29, SHIFT, 114}, {30, SHIFT, 115}, {42, SHIFT, 117}, {43, SHIFT, 118}, {44, SHIFT, 119}, {45, SHIFT, 120}, {46, SHIFT, 121}, {47, SHIFT, 122}, {48, SHIFT, 123}, {49, SHIFT, 124}, {50, SHIFT, 125}, },
			{{-1, ERROR, 78}, {36, SHIFT, 137}, },
			{{-1, ERROR, 79}, {11, SHIFT, 138}, },
			{{-1, ERROR, 80}, {41, SHIFT, 139}, },
			{{-1, ERROR, 81}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 82}, {35, SHIFT, 141}, {42, SHIFT, 95}, {43, SHIFT, 96}, {44, SHIFT, 97}, {45, SHIFT, 98}, {46, SHIFT, 99}, {47, SHIFT, 100}, {48, SHIFT, 101}, {49, SHIFT, 102}, {50, SHIFT, 103}, },
			{{-1, ERROR, 83}, {35, SHIFT, 142}, {42, SHIFT, 105}, {43, SHIFT, 106}, {44, SHIFT, 107}, {45, SHIFT, 108}, {46, SHIFT, 109}, {47, SHIFT, 110}, {48, SHIFT, 111}, {49, SHIFT, 112}, {50, SHIFT, 113}, },
			{{-1, ERROR, 84}, {29, SHIFT, 114}, {30, SHIFT, 115}, {35, SHIFT, 143}, {42, SHIFT, 117}, {43, SHIFT, 118}, {44, SHIFT, 119}, {45, SHIFT, 120}, {46, SHIFT, 121}, {47, SHIFT, 122}, {48, SHIFT, 123}, {49, SHIFT, 124}, {50, SHIFT, 125}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 87}, {35, SHIFT, 144}, },
			{{-1, ERROR, 88}, {29, SHIFT, 114}, {30, SHIFT, 115}, {37, SHIFT, 145}, {42, SHIFT, 146}, {43, SHIFT, 147}, {44, SHIFT, 148}, {45, SHIFT, 149}, {46, SHIFT, 150}, {47, SHIFT, 151}, {48, SHIFT, 152}, {49, SHIFT, 153}, {50, SHIFT, 154}, },
			{{-1, ERROR, 89}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 90}, {37, SHIFT, 156}, {42, SHIFT, 95}, {43, SHIFT, 96}, {44, SHIFT, 97}, {45, SHIFT, 98}, {46, SHIFT, 99}, {47, SHIFT, 100}, {48, SHIFT, 101}, {49, SHIFT, 102}, {50, SHIFT, 103}, },
			{{-1, ERROR, 91}, {37, SHIFT, 157}, {42, SHIFT, 105}, {43, SHIFT, 106}, {44, SHIFT, 107}, {45, SHIFT, 108}, {46, SHIFT, 109}, {47, SHIFT, 110}, {48, SHIFT, 111}, {49, SHIFT, 112}, {50, SHIFT, 113}, },
			{{-1, ERROR, 92}, {29, SHIFT, 114}, {30, SHIFT, 115}, {37, SHIFT, 158}, {42, SHIFT, 117}, {43, SHIFT, 118}, {44, SHIFT, 119}, {45, SHIFT, 120}, {46, SHIFT, 121}, {47, SHIFT, 122}, {48, SHIFT, 123}, {49, SHIFT, 124}, {50, SHIFT, 125}, },
			{{-1, REDUCE, 16}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, ERROR, 94}, {35, SHIFT, 159}, },
			{{-1, ERROR, 95}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 96}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 97}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 98}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 99}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 100}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 101}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 102}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 103}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 104}, {35, SHIFT, 169}, },
			{{-1, ERROR, 105}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 106}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 107}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 108}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 109}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 110}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 111}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 112}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 113}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 114}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 115}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 116}, {35, SHIFT, 181}, },
			{{-1, ERROR, 117}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 118}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 119}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 120}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 121}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 122}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 123}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 124}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 125}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 126}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 127}, {29, SHIFT, 114}, {30, SHIFT, 115}, {37, SHIFT, 192}, {42, SHIFT, 146}, {43, SHIFT, 147}, {44, SHIFT, 148}, {45, SHIFT, 149}, {46, SHIFT, 150}, {47, SHIFT, 151}, {48, SHIFT, 152}, {49, SHIFT, 153}, {50, SHIFT, 154}, },
			{{-1, ERROR, 128}, {15, SHIFT, 193}, },
			{{-1, ERROR, 129}, {15, SHIFT, 194}, },
			{{-1, ERROR, 130}, {15, SHIFT, 195}, },
			{{-1, ERROR, 131}, {29, SHIFT, 114}, {30, SHIFT, 115}, {37, SHIFT, 196}, {42, SHIFT, 146}, {43, SHIFT, 147}, {44, SHIFT, 148}, {45, SHIFT, 149}, {46, SHIFT, 150}, {47, SHIFT, 151}, {48, SHIFT, 152}, {49, SHIFT, 153}, {50, SHIFT, 154}, },
			{{-1, ERROR, 132}, {19, SHIFT, 197}, },
			{{-1, ERROR, 133}, {19, SHIFT, 198}, },
			{{-1, ERROR, 134}, {19, SHIFT, 199}, },
			{{-1, ERROR, 135}, {29, SHIFT, 114}, {30, SHIFT, 115}, {42, SHIFT, 146}, {43, SHIFT, 147}, {44, SHIFT, 148}, {45, SHIFT, 149}, {46, SHIFT, 150}, {47, SHIFT, 151}, {48, SHIFT, 152}, {49, SHIFT, 153}, {50, SHIFT, 154}, },
			{{-1, ERROR, 136}, {21, SHIFT, 200}, },
			{{-1, ERROR, 137}, {10, SHIFT, 55}, {11, SHIFT, 56}, {30, SHIFT, 74}, {36, SHIFT, 58}, {51, SHIFT, 59}, {52, SHIFT, 60}, },
			{{-1, ERROR, 138}, {24, SHIFT, 202}, {28, SHIFT, 203}, },
			{{-1, REDUCE, 9}, },
			{{-1, ERROR, 140}, {29, SHIFT, 114}, {30, SHIFT, 115}, {35, SHIFT, 204}, {42, SHIFT, 146}, {43, SHIFT, 147}, {44, SHIFT, 148}, {45, SHIFT, 149}, {46, SHIFT, 150}, {47, SHIFT, 151}, {48, SHIFT, 152}, {49, SHIFT, 153}, {50, SHIFT, 154}, },
			{{-1, REDUCE, 83}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 145}, {35, SHIFT, 205}, },
			{{-1, ERROR, 146}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 147}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 148}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 149}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 150}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 151}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 152}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 153}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 154}, {10, SHIFT, 55}, {11, SHIFT, 56}, {36, SHIFT, 58}, {52, SHIFT, 60}, },
			{{-1, ERROR, 155}, {29, SHIFT, 114}, {30, SHIFT, 115}, {37, SHIFT, 215}, {42, SHIFT, 146}, {43, SHIFT, 147}, {44, SHIFT, 148}, {45, SHIFT, 149}, {46, SHIFT, 150}, {47, SHIFT, 151}, {48, SHIFT, 152}, {49, SHIFT, 153}, {50, SHIFT, 154}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 20}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 24}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 28}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 32}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 36}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 40}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 44}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 48}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 52}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 18}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 22}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 26}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 30}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 34}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 38}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 42}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 46}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 50}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 53}, {31, SHIFT, 126}, },
			{{-1, REDUCE, 54}, {31, SHIFT, 126}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 17}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 21}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 25}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 29}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 33}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 37}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 41}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 45}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 49}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 56}, },
			{{-1, ERROR, 192}, {15, SHIFT, 216}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 196}, {19, SHIFT, 220}, },
			{{-1, ERROR, 197}, {10, SHIFT, 35}, {11, SHIFT, 36}, {12, SHIFT, 37}, },
			{{-1, ERROR, 198}, {10, SHIFT, 35}, {11, SHIFT, 36}, {12, SHIFT, 37}, },
			{{-1, ERROR, 199}, {10, SHIFT, 35}, {11, SHIFT, 36}, {12, SHIFT, 37}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 201}, {37, SHIFT, 225}, {42, SHIFT, 105}, {43, SHIFT, 106}, {44, SHIFT, 107}, {45, SHIFT, 108}, {46, SHIFT, 109}, {47, SHIFT, 110}, {48, SHIFT, 111}, {49, SHIFT, 112}, {50, SHIFT, 113}, },
			{{-1, ERROR, 202}, {11, SHIFT, 226}, },
			{{-1, ERROR, 203}, {11, SHIFT, 228}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 19}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 23}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 27}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 31}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 35}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 39}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 43}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 47}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 51}, {29, SHIFT, 114}, {30, SHIFT, 115}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 217}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 231}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 218}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {14, SHIFT, 232}, {16, SHIFT, 233}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 219}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 234}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 220}, {10, SHIFT, 35}, {11, SHIFT, 36}, {12, SHIFT, 37}, },
			{{-1, ERROR, 221}, {34, SHIFT, 236}, },
			{{-1, ERROR, 222}, {34, SHIFT, 237}, },
			{{-1, ERROR, 223}, {34, SHIFT, 238}, },
			{{-1, ERROR, 224}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {22, SHIFT, 239}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 225}, {35, SHIFT, 240}, },
			{{-1, REDUCE, 93}, },
			{{-1, ERROR, 227}, {21, SHIFT, 241}, },
			{{-1, REDUCE, 95}, },
			{{-1, ERROR, 229}, {24, SHIFT, 242}, },
			{{-1, ERROR, 230}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 243}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 232}, {35, SHIFT, 246}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 235}, {34, SHIFT, 249}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 239}, {35, SHIFT, 253}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 242}, {11, SHIFT, 226}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 89}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 245}, {14, SHIFT, 257}, },
			{{-1, REDUCE, 84}, },
			{{-1, ERROR, 247}, {14, SHIFT, 258}, },
			{{-1, ERROR, 248}, {14, SHIFT, 259}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 101}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 261}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 101}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 261}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 101}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 261}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 90}, },
			{{-1, ERROR, 254}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {26, SHIFT, 265}, {52, SHIFT, 24}, },
			{{-1, ERROR, 255}, {21, SHIFT, 266}, },
			{{-1, ERROR, 256}, {14, SHIFT, 267}, },
			{{-1, ERROR, 257}, {35, SHIFT, 268}, },
			{{-1, ERROR, 258}, {35, SHIFT, 269}, },
			{{-1, ERROR, 259}, {35, SHIFT, 270}, },
			{{-1, REDUCE, 101}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 261}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, ERROR, 261}, {34, SHIFT, 272}, },
			{{-1, ERROR, 262}, {18, SHIFT, 273}, },
			{{-1, ERROR, 263}, {18, SHIFT, 274}, },
			{{-1, ERROR, 264}, {18, SHIFT, 275}, },
			{{-1, ERROR, 265}, {35, SHIFT, 276}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 267}, {35, SHIFT, 278}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 85}, },
			{{-1, ERROR, 271}, {18, SHIFT, 279}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 273}, {35, SHIFT, 281}, },
			{{-1, ERROR, 274}, {35, SHIFT, 282}, },
			{{-1, ERROR, 275}, {35, SHIFT, 283}, },
			{{-1, REDUCE, 92}, },
			{{-1, ERROR, 277}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {26, SHIFT, 284}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 279}, {35, SHIFT, 285}, },
			{{-1, REDUCE, 100}, {4, SHIFT, 17}, {5, SHIFT, 18}, {13, SHIFT, 19}, {17, SHIFT, 20}, {20, SHIFT, 21}, {23, SHIFT, 22}, {25, SHIFT, 23}, {52, SHIFT, 24}, },
			{{-1, REDUCE, 99}, },
			{{-1, REDUCE, 97}, },
			{{-1, REDUCE, 96}, },
			{{-1, ERROR, 284}, {35, SHIFT, 286}, },
			{{-1, REDUCE, 98}, },
			{{-1, REDUCE, 94}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 6}, },
			{{-1, 11}, },
			{{-1, 39}, },
			{{-1, 25}, {15, 40}, {23, 47}, {39, 51}, {41, 54}, },
			{{-1, 12}, },
			{{-1, 38}, {197, 221}, {198, 222}, {199, 223}, {220, 235}, },
			{{-1, 75}, {42, 61}, {43, 67}, {44, 71}, {49, 82}, {58, 90}, },
			{{-1, 62}, {43, 68}, {44, 72}, {45, 76}, {49, 83}, {58, 91}, {137, 201}, },
			{{-1, 77}, {42, 63}, {43, 69}, {44, 73}, {49, 84}, {57, 88}, {58, 92}, {59, 93}, {66, 127}, {70, 131}, {74, 135}, {81, 140}, {89, 155}, {95, 160}, {96, 161}, {97, 162}, {98, 163}, {99, 164}, {100, 165}, {101, 166}, {102, 167}, {103, 168}, {105, 170}, {106, 171}, {107, 172}, {108, 173}, {109, 174}, {110, 175}, {111, 176}, {112, 177}, {113, 178}, {117, 182}, {118, 183}, {119, 184}, {120, 185}, {121, 186}, {122, 187}, {123, 188}, {124, 189}, {125, 190}, {146, 206}, {147, 207}, {148, 208}, {149, 209}, {150, 210}, {151, 211}, {152, 212}, {153, 213}, {154, 214}, },
			{{-1, 64}, {114, 179}, {115, 180}, },
			{{-1, 65}, {126, 191}, },
			{{-1, 244}, {6, 13}, {22, 46}, {193, 217}, {194, 218}, {195, 219}, {200, 224}, {216, 230}, {236, 250}, {237, 251}, {238, 252}, {241, 254}, {249, 260}, {266, 277}, {272, 280}, },
			{{-1, 26}, },
			{{-1, 27}, },
			{{-1, 28}, },
			{{-1, 29}, },
			{{-1, 245}, {233, 247}, {234, 248}, {243, 256}, },
			{{-1, 30}, },
			{{-1, 31}, },
			{{-1, 32}, },
			{{-1, 227}, {242, 255}, },
			{{-1, 33}, },
			{{-1, 229}, },
			{{-1, 34}, },
			{{-1, 262}, {251, 263}, {252, 264}, {260, 271}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: identificador",
			"expecting: EOF",
			"expecting: ';'",
			"expecting: 'inicio'",
			"expecting: 'fim.', 'leia', 'escreva', 'const', 'inteiro', 'real', 'caractere', 'se', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: ':'",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: string, n int, n real",
			"expecting: '('",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'ate', 'para', identificador",
			"expecting: 'de', '<-', ',', ';', ')', '['",
			"expecting: '<-'",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'fim se', 'senao', 'avalie', 'fim avalie', 'enquanto', 'fim enquanto', 'repita', 'ate', 'para', 'fim para', identificador",
			"expecting: ':', ';'",
			"expecting: ',', ';'",
			"expecting: string, n int, '-', '(', 'nao', identificador",
			"expecting: 'de'",
			"expecting: n int",
			"expecting: ')'",
			"expecting: '+', '-', '*', ';', ')', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: string, n int, '(', identificador",
			"expecting: ')', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: '+', '-', ')', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: '+', '-', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: ']'",
			"expecting: ';', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: '+', '-', ';', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: '+', '-', ';', ')', '=', '>', '<', '>=', '<=', '<>', 'e', 'ou', 'xor'",
			"expecting: 'entao'",
			"expecting: 'caso'",
			"expecting: 'faca'",
			"expecting: 'ate', 'passo'",
			"expecting: 'de', '<-', ',', ';', ')'",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'leia', 'escreva', 'se', 'fim se', 'senao', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'fim enquanto', 'repita', 'para', identificador",
			"expecting: 'ate'",
			"expecting: 'leia', 'escreva', 'se', 'fim se', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'avalie', 'fim avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', 'fim para', identificador",
			"expecting: 'fim se'",
			"expecting: 'fim avalie'",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'fim avalie', 'enquanto', 'repita', 'para', identificador",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 5, 1, 6, 6, 6, 5, 6, 7, 8, 1, 2, 9, 9, 9, 9, 9, 10, 1, 11, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 3, 1, 15, 1, 16, 16, 16, 16, 10, 17, 18, 16, 5, 15, 1, 5, 19, 20, 20, 21, 16, 21, 20, 22, 22, 23, 20, 20, 21, 22, 22, 23, 21, 22, 22, 23, 21, 24, 22, 25, 9, 18, 26, 21, 27, 27, 28, 1, 5, 3, 23, 21, 22, 22, 23, 29, 3, 21, 21, 21, 21, 21, 21, 21, 21, 21, 3, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 3, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 23, 30, 30, 30, 23, 31, 31, 31, 25, 32, 16, 33, 34, 28, 13, 13, 13, 13, 3, 21, 21, 21, 21, 21, 21, 21, 21, 21, 23, 20, 20, 20, 13, 29, 29, 29, 29, 29, 29, 29, 29, 29, 13, 29, 29, 29, 29, 29, 29, 29, 29, 29, 20, 20, 13, 29, 29, 29, 29, 29, 29, 29, 29, 29, 20, 30, 35, 36, 35, 31, 8, 8, 8, 37, 22, 18, 18, 13, 13, 29, 29, 29, 29, 29, 29, 29, 29, 29, 20, 35, 35, 36, 35, 8, 6, 6, 6, 37, 3, 32, 32, 38, 38, 35, 39, 3, 39, 39, 6, 40, 40, 40, 3, 13, 41, 18, 39, 39, 42, 13, 42, 42, 40, 40, 40, 40, 13, 41, 32, 42, 3, 3, 3, 40, 6, 43, 43, 43, 3, 41, 3, 13, 13, 13, 43, 44, 3, 3, 3, 13, 41, 13, 3, 44, 13, 13, 13, 3, 13, 13, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
