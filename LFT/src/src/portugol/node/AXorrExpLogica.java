/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.node;

import portugol.analysis.*;

@SuppressWarnings("nls")
public final class AXorrExpLogica extends PExpLogica
{
    private PExp _exp_;
    private TXor _xor_;
    private PSomaMenos _somaMenos_;

    public AXorrExpLogica()
    {
        // Constructor
    }

    public AXorrExpLogica(
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TXor _xor_,
        @SuppressWarnings("hiding") PSomaMenos _somaMenos_)
    {
        // Constructor
        setExp(_exp_);

        setXor(_xor_);

        setSomaMenos(_somaMenos_);

    }

    @Override
    public Object clone()
    {
        return new AXorrExpLogica(
            cloneNode(this._exp_),
            cloneNode(this._xor_),
            cloneNode(this._somaMenos_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAXorrExpLogica(this);
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TXor getXor()
    {
        return this._xor_;
    }

    public void setXor(TXor node)
    {
        if(this._xor_ != null)
        {
            this._xor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xor_ = node;
    }

    public PSomaMenos getSomaMenos()
    {
        return this._somaMenos_;
    }

    public void setSomaMenos(PSomaMenos node)
    {
        if(this._somaMenos_ != null)
        {
            this._somaMenos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._somaMenos_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exp_)
            + toString(this._xor_)
            + toString(this._somaMenos_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._xor_ == child)
        {
            this._xor_ = null;
            return;
        }

        if(this._somaMenos_ == child)
        {
            this._somaMenos_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._xor_ == oldChild)
        {
            setXor((TXor) newChild);
            return;
        }

        if(this._somaMenos_ == oldChild)
        {
            setSomaMenos((PSomaMenos) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
